'use strict'

let error
let hasRequiredError
function requireError() {
  if (hasRequiredError) {
    return error
  }
  hasRequiredError = 1
  function formatPurlErrorMessage(message = '') {
    const { length } = message
    let formatted = ''
    if (length) {
      // Lower case start of message.
      const code0 = message.charCodeAt(0)
      formatted =
        code0 >= 65 /*'A'*/ || code0 <= 90 /*'Z'*/
          ? `${message[0].toLowerCase()}${message.slice(1)}`
          : message
      // Remove period from end of message.
      if (
        length > 1 &&
        message.charCodeAt(length - 1) === 46 /*'.'*/ &&
        message.charCodeAt(length - 2) !== 46
      ) {
        formatted = formatted.slice(0, -1)
      }
    }
    return `Invalid purl: ${formatted}`
  }
  class PurlError extends Error {
    constructor(message) {
      super(formatPurlErrorMessage(message))
    }
  }
  error = {
    formatPurlErrorMessage,
    PurlError
  }
  return error
}

let decode
let hasRequiredDecode
function requireDecode() {
  if (hasRequiredDecode) {
    return decode
  }
  hasRequiredDecode = 1
  const { PurlError } = /*@__PURE__*/ requireError()
  const { decodeURIComponent: decodeComponent } = globalThis
  function decodePurlComponent(comp, encodedComponent) {
    try {
      return decodeComponent(encodedComponent)
    } catch {}
    throw new PurlError(`unable to decode "${comp}" component`)
  }
  decode = {
    decodePurlComponent
  }
  return decode
}

let constants
let hasRequiredConstants
function requireConstants() {
  if (hasRequiredConstants) {
    return constants
  }
  hasRequiredConstants = 1
  const LOOP_SENTINEL = 1_000_000
  const REUSED_SEARCH_PARAMS = new URLSearchParams()
  const REUSED_SEARCH_PARAMS_KEY = '_'
  const REUSED_SEARCH_PARAMS_OFFSET = 2 // '_='.length

  constants = {
    LOOP_SENTINEL,
    REUSED_SEARCH_PARAMS,
    REUSED_SEARCH_PARAMS_KEY,
    REUSED_SEARCH_PARAMS_OFFSET
  }
  return constants
}

let objects
let hasRequiredObjects
function requireObjects() {
  if (hasRequiredObjects) {
    return objects
  }
  hasRequiredObjects = 1
  const { LOOP_SENTINEL } = /*@__PURE__*/ requireConstants()
  function isObject(value) {
    return value !== null && typeof value === 'object'
  }
  function recursiveFreeze(value_) {
    if (
      value_ === null ||
      !(typeof value_ === 'object' || typeof value_ === 'function') ||
      Object.isFrozen(value_)
    ) {
      return value_
    }
    const queue = [value_]
    let { length: queueLength } = queue
    let pos = 0
    while (pos < queueLength) {
      if (pos === LOOP_SENTINEL) {
        throw new Error(
          'Detected infinite loop in object crawl of recursiveFreeze'
        )
      }
      const obj = queue[pos++]
      Object.freeze(obj)
      if (Array.isArray(obj)) {
        for (let i = 0, { length } = obj; i < length; i += 1) {
          const item = obj[i]
          if (
            item !== null &&
            (typeof item === 'object' || typeof item === 'function') &&
            !Object.isFrozen(item)
          ) {
            queue[queueLength++] = item
          }
        }
      } else {
        const keys = Reflect.ownKeys(obj)
        for (let i = 0, { length } = keys; i < length; i += 1) {
          const propValue = obj[keys[i]]
          if (
            propValue !== null &&
            (typeof propValue === 'object' ||
              typeof propValue === 'function') &&
            !Object.isFrozen(propValue)
          ) {
            queue[queueLength++] = propValue
          }
        }
      }
    }
    return value_
  }
  objects = {
    isObject,
    recursiveFreeze
  }
  return objects
}

let strings
let hasRequiredStrings
function requireStrings() {
  if (hasRequiredStrings) {
    return strings
  }
  hasRequiredStrings = 1

  // Intl.Collator is faster than String#localeCompare
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare:
  // > When comparing large numbers of strings, such as in sorting large arrays,
  // > it is better to create an Intl.Collator object and use the function provided
  // > by its compare() method.
  let _localeCompare
  function localeCompare(x, y) {
    if (_localeCompare === undefined) {
      // Lazily call new Intl.Collator() because in Node it can take 10-14ms.
      _localeCompare = new Intl.Collator().compare
    }
    return _localeCompare(x, y)
  }

  // This regexp is valid as of 2024-08-01.
  // https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
  const regexSemverNumberedGroups =
    /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
  function isBlank(str) {
    for (let i = 0, { length } = str; i < length; i += 1) {
      const code = str.charCodeAt(i)
      // biome-ignore format: newlines
      if (!(
      // Whitespace characters according to ECMAScript spec:
      // https://tc39.es/ecma262/#sec-white-space

      code === 0x0020 ||
      // Space
      code === 0x0009 ||
      // Tab
      code === 0x000a ||
      // Line Feed
      code === 0x000b ||
      // Vertical Tab
      code === 0x000c ||
      // Form Feed
      code === 0x000d ||
      // Carriage Return
      code === 0x00a0 ||
      // No-Break Space
      code === 0x1680 ||
      // Ogham Space Mark
      code === 0x2000 ||
      // En Quad
      code === 0x2001 ||
      // Em Quad
      code === 0x2002 ||
      // En Space
      code === 0x2003 ||
      // Em Space
      code === 0x2004 ||
      // Three-Per-Em Space
      code === 0x2005 ||
      // Four-Per-Em Space
      code === 0x2006 ||
      // Six-Per-Em Space
      code === 0x2007 ||
      // Figure Space
      code === 0x2008 ||
      // Punctuation Space
      code === 0x2009 ||
      // Thin Space
      code === 0x200a ||
      // Hair Space
      code === 0x2028 ||
      // Line Separator
      code === 0x2029 ||
      // Paragraph Separator
      code === 0x202f ||
      // Narrow No-Break Space
      code === 0x205f ||
      // Medium Mathematical Space
      code === 0x3000 ||
      // Ideographic Space
      code === 0xfeff
      // Byte Order Mark
      )) {
        return false;
      }
    }
    return true
  }
  function isNonEmptyString(value) {
    return typeof value === 'string' && value.length > 0
  }
  function isSemverString(value) {
    return typeof value === 'string' && regexSemverNumberedGroups.test(value)
  }
  function lowerName(purl) {
    purl.name = purl.name.toLowerCase()
  }
  function lowerNamespace(purl) {
    const { namespace } = purl
    if (typeof namespace === 'string') {
      purl.namespace = namespace.toLowerCase()
    }
  }
  function lowerVersion(purl) {
    const { version } = purl
    if (typeof version === 'string') {
      purl.version = version.toLowerCase()
    }
  }
  function replaceDashesWithUnderscores(str) {
    // Replace all "-" with "_"
    let result = ''
    let fromIndex = 0
    let index = 0
    while ((index = str.indexOf('-', fromIndex)) !== -1) {
      result = result + str.slice(fromIndex, index) + '_'
      fromIndex = index + 1
    }
    return fromIndex ? result + str.slice(fromIndex) : str
  }
  function replaceUnderscoresWithDashes(str) {
    // Replace all "_" with "-"
    let result = ''
    let fromIndex = 0
    let index = 0
    while ((index = str.indexOf('_', fromIndex)) !== -1) {
      result = result + str.slice(fromIndex, index) + '-'
      fromIndex = index + 1
    }
    return fromIndex ? result + str.slice(fromIndex) : str
  }
  function trimLeadingSlashes(str) {
    let start = 0
    while (str.charCodeAt(start) === 47 /*'/'*/) {
      start += 1
    }
    return start === 0 ? str : str.slice(start)
  }
  strings = {
    isBlank,
    isNonEmptyString,
    isSemverString,
    localeCompare,
    lowerName,
    lowerNamespace,
    lowerVersion,
    replaceDashesWithUnderscores,
    replaceUnderscoresWithDashes,
    trimLeadingSlashes
  }
  return strings
}

let encode
let hasRequiredEncode
function requireEncode() {
  if (hasRequiredEncode) {
    return encode
  }
  hasRequiredEncode = 1
  const {
    REUSED_SEARCH_PARAMS,
    REUSED_SEARCH_PARAMS_KEY,
    REUSED_SEARCH_PARAMS_OFFSET
  } = /*@__PURE__*/ requireConstants()
  const { isObject } = /*@__PURE__*/ requireObjects()
  const { isNonEmptyString } = /*@__PURE__*/ requireStrings()
  const { encodeURIComponent: encodeComponent } = globalThis
  function encodeName(name) {
    return isNonEmptyString(name)
      ? encodeComponent(name).replaceAll('%3A', ':')
      : ''
  }
  function encodeNamespace(namespace) {
    return isNonEmptyString(namespace)
      ? encodeComponent(namespace).replaceAll('%3A', ':').replaceAll('%2F', '/')
      : ''
  }
  function encodeQualifierParam(param) {
    if (isNonEmptyString(param)) {
      // Replace spaces with %20's so they don't get converted to plus signs.
      const value = String(param).replaceAll(' ', '%20')
      // Use URLSearchParams#set to preserve plus signs.
      // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#preserving_plus_signs
      REUSED_SEARCH_PARAMS.set(REUSED_SEARCH_PARAMS_KEY, value)
      // Param key and value are encoded with `percentEncodeSet` of
      // 'application/x-www-form-urlencoded' and `spaceAsPlus` of `true`.
      // https://url.spec.whatwg.org/#urlencoded-serializing
      const search = REUSED_SEARCH_PARAMS.toString()
      return search
        .slice(REUSED_SEARCH_PARAMS_OFFSET)
        .replaceAll('%2520', '%20')
        .replaceAll('+', '%2B')
    }
    return ''
  }
  function encodeQualifiers(qualifiers) {
    if (isObject(qualifiers)) {
      // Sort this list of qualifier strings lexicographically.
      const qualifiersKeys = Object.keys(qualifiers).sort()
      const searchParams = new URLSearchParams()
      for (let i = 0, { length } = qualifiersKeys; i < length; i += 1) {
        const key = qualifiersKeys[i]
        // Replace spaces with %20's so they don't get converted to plus signs.
        const value = String(qualifiers[key]).replaceAll(' ', '%20')
        // Use URLSearchParams#set to preserve plus signs.
        // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#preserving_plus_signs
        searchParams.set(key, value)
      }
      return searchParams
        .toString()
        .replaceAll('%2520', '%20')
        .replaceAll('+', '%2B')
    }
    return ''
  }
  function encodeSubpath(subpath) {
    return isNonEmptyString(subpath)
      ? encodeComponent(subpath).replaceAll('%2F', '/')
      : ''
  }
  function encodeVersion(version) {
    return isNonEmptyString(version)
      ? encodeComponent(version).replaceAll('%3A', ':')
      : ''
  }
  encode = {
    encodeComponent,
    encodeName,
    encodeNamespace,
    encodeVersion,
    encodeQualifiers,
    encodeQualifierParam,
    encodeSubpath
  }
  return encode
}

let helpers
let hasRequiredHelpers
function requireHelpers() {
  if (hasRequiredHelpers) {
    return helpers
  }
  hasRequiredHelpers = 1
  function createHelpersNamespaceObject(helpers, options_ = {}) {
    const { comparator, ...defaults } = {
      __proto__: null,
      ...options_
    }
    const helperNames = Object.keys(helpers).sort()
    const propNames = [
      ...new Set(Object.values(helpers).flatMap(Object.keys))
    ].sort(comparator)
    const nsObject = Object.create(null)
    for (let i = 0, { length } = propNames; i < length; i += 1) {
      const propName = propNames[i]
      const helpersForProp = Object.create(null)
      for (
        let j = 0, { length: length_j } = helperNames;
        j < length_j;
        j += 1
      ) {
        const helperName = helperNames[j]
        const helperValue =
          helpers[helperName][propName] ?? defaults[helperName]
        if (helperValue !== undefined) {
          helpersForProp[helperName] = helperValue
        }
      }
      nsObject[propName] = helpersForProp
    }
    return nsObject
  }
  helpers = {
    createHelpersNamespaceObject
  }
  return helpers
}

let normalize
let hasRequiredNormalize
function requireNormalize() {
  if (hasRequiredNormalize) {
    return normalize
  }
  hasRequiredNormalize = 1
  const { isObject } = /*@__PURE__*/ requireObjects()
  const { isBlank } = /*@__PURE__*/ requireStrings()
  function normalizeName(rawName) {
    return typeof rawName === 'string' ? rawName.trim() : undefined
  }
  function normalizeNamespace(rawNamespace) {
    return typeof rawNamespace === 'string'
      ? normalizePath(rawNamespace)
      : undefined
  }
  function normalizePath(pathname, callback) {
    let collapsed = ''
    let start = 0
    // Leading and trailing slashes, i.e. '/', are not significant and should be
    // stripped in the canonical form.
    while (pathname.charCodeAt(start) === 47 /*'/'*/) {
      start += 1
    }
    let nextIndex = pathname.indexOf('/', start)
    if (nextIndex === -1) {
      return pathname.slice(start)
    }
    // Discard any empty string segments by collapsing repeated segment
    // separator slashes, i.e. '/'.
    while (nextIndex !== -1) {
      const segment = pathname.slice(start, nextIndex)
      if (callback === undefined || callback(segment)) {
        collapsed = collapsed + (collapsed.length === 0 ? '' : '/') + segment
      }
      start = nextIndex + 1
      while (pathname.charCodeAt(start) === 47) {
        start += 1
      }
      nextIndex = pathname.indexOf('/', start)
    }
    const lastSegment = pathname.slice(start)
    if (
      lastSegment.length !== 0 &&
      (callback === undefined || callback(lastSegment))
    ) {
      collapsed = collapsed + '/' + lastSegment
    }
    return collapsed
  }
  function normalizeQualifiers(rawQualifiers) {
    let qualifiers
    // Use for-of to work with entries iterators.
    for (const { 0: key, 1: value } of qualifiersToEntries(rawQualifiers)) {
      const strValue = typeof value === 'string' ? value : String(value)
      const trimmed = strValue.trim()
      // A key=value pair with an empty value is the same as no key/value
      // at all for this key.
      if (trimmed.length === 0) {
        continue
      }
      if (qualifiers === undefined) {
        qualifiers = {
          __proto__: null
        }
      }
      // A key is case insensitive. The canonical form is lowercase.
      qualifiers[key.toLowerCase()] = trimmed
    }
    return qualifiers
  }
  function normalizeSubpath(rawSubpath) {
    return typeof rawSubpath === 'string'
      ? normalizePath(rawSubpath, subpathFilter)
      : undefined
  }
  function normalizeType(rawType) {
    // The type must NOT be percent-encoded.
    // The type is case insensitive. The canonical form is lowercase.
    return typeof rawType === 'string'
      ? rawType.trim().toLowerCase()
      : undefined
  }
  function normalizeVersion(rawVersion) {
    return typeof rawVersion === 'string' ? rawVersion.trim() : undefined
  }
  function qualifiersToEntries(rawQualifiers) {
    if (isObject(rawQualifiers)) {
      // URLSearchParams instances have an "entries" method that returns an iterator.
      return typeof rawQualifiers.entries === 'function'
        ? rawQualifiers.entries()
        : Object.entries(rawQualifiers)
    }
    return typeof rawQualifiers === 'string'
      ? new URLSearchParams(rawQualifiers).entries()
      : Object.entries({})
  }
  function subpathFilter(segment) {
    // When percent-decoded, a segment
    //   - must not be any of '.' or '..'
    //   - must not be empty
    const { length } = segment
    if (length === 1 && segment.charCodeAt(0) === 46 /*'.'*/) {
      return false
    }
    if (
      length === 2 &&
      segment.charCodeAt(0) === 46 &&
      segment.charCodeAt(1) === 46
    ) {
      return false
    }
    return !isBlank(segment)
  }
  normalize = {
    normalizeName,
    normalizeNamespace,
    normalizePath,
    normalizeQualifiers,
    normalizeSubpath,
    normalizeType,
    normalizeVersion
  }
  return normalize
}

let lang
let hasRequiredLang
function requireLang() {
  if (hasRequiredLang) {
    return lang
  }
  hasRequiredLang = 1
  function isNullishOrEmptyString(value) {
    return (
      value === null ||
      value === undefined ||
      (typeof value === 'string' && value.length === 0)
    )
  }
  lang = {
    isNullishOrEmptyString
  }
  return lang
}

let validate
let hasRequiredValidate
function requireValidate() {
  if (hasRequiredValidate) {
    return validate
  }
  hasRequiredValidate = 1
  const { PurlError } = /*@__PURE__*/ requireError()
  const { isNullishOrEmptyString } = /*@__PURE__*/ requireLang()
  const { isNonEmptyString } = /*@__PURE__*/ requireStrings()
  function validateEmptyByType(type, name, value, throws) {
    if (!isNullishOrEmptyString(value)) {
      if (throws) {
        throw new PurlError(`${type} "${name}" component must be empty`)
      }
      return false
    }
    return true
  }
  function validateName(name, throws) {
    return (
      validateRequired('name', name, throws) &&
      validateStrings('name', name, throws)
    )
  }
  function validateNamespace(namespace, throws) {
    return validateStrings('namespace', namespace, throws)
  }
  function validateQualifiers(qualifiers, throws) {
    if (qualifiers === null || qualifiers === undefined) {
      return true
    }
    if (typeof qualifiers !== 'object') {
      if (throws) {
        throw new PurlError('"qualifiers" must be an object')
      }
      return false
    }
    const keysIterable =
      // URLSearchParams instances have a "keys" method that returns an iterator.
      typeof qualifiers.keys === 'function'
        ? qualifiers.keys()
        : Object.keys(qualifiers)
    // Use for-of to work with URLSearchParams#keys iterators.
    for (const key of keysIterable) {
      if (!validateQualifierKey(key, throws)) {
        return false
      }
    }
    return true
  }
  function validateQualifierKey(key, throws) {
    // A key cannot start with a number.
    if (!validateStartsWithoutNumber('qualifier', key, throws)) {
      return false
    }
    // The key must be composed only of ASCII letters and numbers,
    // '.', '-' and '_' (period, dash and underscore).
    for (let i = 0, { length } = key; i < length; i += 1) {
      const code = key.charCodeAt(i)
      // biome-ignore format: newlines
      if (!(code >= 48 && code <= 57 ||
      // 0-9
      code >= 65 && code <= 90 ||
      // A-Z
      code >= 97 && code <= 122 ||
      // a-z
      code === 46 ||
      // .
      code === 45 ||
      // -
      code === 95
      // _
      )) {
        if (throws) {
          throw new PurlError(`qualifier "${key}" contains an illegal character`);
        }
        return false;
      }
    }
    return true
  }
  function validateRequired(name, value, throws) {
    if (isNullishOrEmptyString(value)) {
      if (throws) {
        throw new PurlError(`"${name}" is a required component`)
      }
      return false
    }
    return true
  }
  function validateRequiredByType(type, name, value, throws) {
    if (isNullishOrEmptyString(value)) {
      if (throws) {
        throw new PurlError(`${type} requires a "${name}" component`)
      }
      return false
    }
    return true
  }
  function validateStartsWithoutNumber(name, value, throws) {
    if (isNonEmptyString(value)) {
      const code = value.charCodeAt(0)
      if (code >= 48 /*'0'*/ && code <= 57 /*'9'*/) {
        if (throws) {
          throw new PurlError(`${name} "${value}" cannot start with a number`)
        }
        return false
      }
    }
    return true
  }
  function validateStrings(name, value, throws) {
    if (value === null || value === undefined || typeof value === 'string') {
      return true
    }
    if (throws) {
      throw new PurlError(`"'${name}" must be a string`)
    }
    return false
  }
  function validateSubpath(subpath, throws) {
    return validateStrings('subpath', subpath, throws)
  }
  function validateType(type, throws) {
    // The type cannot be nullish, an empty string, or start with a number.
    if (
      !validateRequired('type', type, throws) ||
      !validateStrings('type', type, throws) ||
      !validateStartsWithoutNumber('type', type, throws)
    ) {
      return false
    }
    // The package type is composed only of ASCII letters and numbers,
    // '.' (period), and '-' (dash).
    for (let i = 0, { length } = type; i < length; i += 1) {
      const code = type.charCodeAt(i)
      // biome-ignore format: newlines
      if (!(code >= 48 && code <= 57 ||
      // 0-9
      code >= 65 && code <= 90 ||
      // A-Z
      code >= 97 && code <= 122 ||
      // a-z
      code === 46 ||
      // .
      code === 45
      // -
      )) {
        if (throws) {
          throw new PurlError(`type "${type}" contains an illegal character`);
        }
        return false;
      }
    }
    return true
  }
  function validateVersion(version, throws) {
    return validateStrings('version', version, throws)
  }
  validate = {
    validateEmptyByType,
    validateName,
    validateNamespace,
    validateQualifiers,
    validateQualifierKey,
    validateRequired,
    validateRequiredByType,
    validateStartsWithoutNumber,
    validateStrings,
    validateSubpath,
    validateType,
    validateVersion
  }
  return validate
}

let purlComponent
let hasRequiredPurlComponent
function requirePurlComponent() {
  if (hasRequiredPurlComponent) {
    return purlComponent
  }
  hasRequiredPurlComponent = 1
  const {
    encodeComponent,
    encodeName,
    encodeNamespace,
    encodeQualifierParam,
    encodeQualifiers,
    encodeSubpath,
    encodeVersion
  } = /*@__PURE__*/ requireEncode()
  const { createHelpersNamespaceObject } = /*@__PURE__*/ requireHelpers()
  const {
    normalizeName,
    normalizeNamespace,
    normalizeQualifiers,
    normalizeSubpath,
    normalizeType,
    normalizeVersion
  } = /*@__PURE__*/ requireNormalize()
  const { isNonEmptyString, localeCompare } = /*@__PURE__*/ requireStrings()
  const {
    validateName,
    validateNamespace,
    validateQualifierKey,
    validateQualifiers,
    validateSubpath,
    validateType,
    validateVersion
  } = /*@__PURE__*/ requireValidate()
  const PurlComponentEncoder = comp =>
    isNonEmptyString(comp) ? encodeComponent(comp) : ''
  const PurlComponentStringNormalizer = comp =>
    typeof comp === 'string' ? comp : undefined
  const PurlComponentValidator = (_comp, _throws) => true
  const componentSortOrderLookup = {
    __proto__: null,
    type: 0,
    namespace: 1,
    name: 2,
    version: 3,
    qualifiers: 4,
    qualifierKey: 5,
    qualifierValue: 6,
    subpath: 7
  }
  function componentSortOrder(comp) {
    return componentSortOrderLookup[comp] ?? comp
  }
  function componentComparator(compA, compB) {
    return localeCompare(componentSortOrder(compA), componentSortOrder(compB))
  }
  purlComponent = {
    // Rules for each purl component:
    // https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst#rules-for-each-purl-component
    PurlComponent: createHelpersNamespaceObject(
      {
        encode: {
          name: encodeName,
          namespace: encodeNamespace,
          version: encodeVersion,
          qualifiers: encodeQualifiers,
          qualifierKey: encodeQualifierParam,
          qualifierValue: encodeQualifierParam,
          subpath: encodeSubpath
        },
        normalize: {
          type: normalizeType,
          namespace: normalizeNamespace,
          name: normalizeName,
          version: normalizeVersion,
          qualifiers: normalizeQualifiers,
          subpath: normalizeSubpath
        },
        validate: {
          type: validateType,
          namespace: validateNamespace,
          name: validateName,
          version: validateVersion,
          qualifierKey: validateQualifierKey,
          qualifiers: validateQualifiers,
          subpath: validateSubpath
        }
      },
      {
        comparator: componentComparator,
        encode: PurlComponentEncoder,
        normalize: PurlComponentStringNormalizer,
        validate: PurlComponentValidator
      }
    )
  }
  return purlComponent
}

let purlQualifierNames
let hasRequiredPurlQualifierNames
function requirePurlQualifierNames() {
  if (hasRequiredPurlQualifierNames) {
    return purlQualifierNames
  }
  hasRequiredPurlQualifierNames = 1
  purlQualifierNames = {
    // Known qualifiers:
    // https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst#known-qualifiers-keyvalue-pairs
    PurlQualifierNames: {
      __proto__: null,
      RepositoryUrl: 'repository_url',
      DownloadUrl: 'download_url',
      VcsUrl: 'vcs_url',
      FileName: 'file_name',
      Checksum: 'checksum'
    }
  }
  return purlQualifierNames
}

const purlType = { exports: {} }

const require$$6 = [
  '_http_agent',
  '_http_client',
  '_http_common',
  '_http_incoming',
  '_http_outgoing',
  '_http_server',
  '_stream_duplex',
  '_stream_passthrough',
  '_stream_readable',
  '_stream_transform',
  '_stream_wrap',
  '_stream_writable',
  '_tls_common',
  '_tls_wrap',
  'assert',
  'assert/strict',
  'async_hooks',
  'buffer',
  'child_process',
  'cluster',
  'console',
  'constants',
  'crypto',
  'dgram',
  'diagnostics_channel',
  'dns',
  'dns/promises',
  'domain',
  'events',
  'fs',
  'fs/promises',
  'http',
  'http2',
  'https',
  'inspector',
  'inspector/promises',
  'module',
  'net',
  'os',
  'path',
  'path/posix',
  'path/win32',
  'perf_hooks',
  'process',
  'punycode',
  'querystring',
  'readline',
  'readline/promises',
  'repl',
  'stream',
  'stream/consumers',
  'stream/promises',
  'stream/web',
  'string_decoder',
  'sys',
  'timers',
  'timers/promises',
  'tls',
  'trace_events',
  'tty',
  'url',
  'util',
  'util/types',
  'v8',
  'vm',
  'wasi',
  'worker_threads',
  'zlib'
]

const require$$7 = [
  '@antoinerey/comp-Fetch',
  '@antoinerey/comp-VideoPlayer',
  '@beisen/Accordion',
  '@beisen/Approve',
  '@beisen/AreaSelector',
  '@beisen/AutoComplete',
  '@beisen/AutoTree',
  '@beisen/BaseButton',
  '@beisen/Beaute',
  '@beisen/BeisenCloudMobile',
  '@beisen/BeisenCloudUI',
  '@beisen/ButtonGroup',
  '@beisen/ChaosUI',
  '@beisen/ChaosUI-V1',
  '@beisen/CheckboxList',
  '@beisen/CommonMount',
  '@beisen/CommonPop',
  '@beisen/DataGrid',
  '@beisen/DateTime',
  '@beisen/DropDownButton',
  '@beisen/DropDownList',
  '@beisen/ExtendComponent',
  '@beisen/FormUploader',
  '@beisen/IconButton',
  '@beisen/Loading',
  '@beisen/MultiSelect',
  '@beisen/NaDeStyle',
  '@beisen/Paging',
  '@beisen/PopLayer',
  '@beisen/RadioList',
  '@beisen/ReactTransformTenchmark',
  '@beisen/Search',
  '@beisen/selectedComponent',
  '@beisen/Sidebar',
  '@beisen/StaticFormLabel',
  '@beisen/TabComponent',
  '@beisen/Textarea',
  '@beisen/Textbox',
  '@beisen/TimePicker',
  '@beisen/TitaFeed',
  '@beisen/ToolTip',
  '@beisen/Transfer',
  '@beisen/Tree',
  '@beisen/UserSelector',
  '@chasidic/tsSchema',
  '@chymz/DaStrap',
  '@chymz/DaUsers',
  '@claviska/jquery-ajaxSubmit',
  '@cryptolize/FileSaver',
  '@djforth/I18n_helper',
  '@dostolu/baseController',
  '@dostolu/exctractIntl',
  '@dostolu/mongooseSlug',
  '@dostolu/validationTransformer',
  '@opam-alpha/ANSITerminal',
  '@opam-alpha/BetterErrors',
  '@opam-alpha/reactiveData',
  '@pioug/MidiConvert',
  '@smuuf/idleCat',
  '@sycoraxya/validateJS',
  '@tempest/endWhen',
  '@tempest/fromPromise',
  '@tempest/replaceError',
  '@tempest/startWith',
  '@tempest/throwError',
  '@yuanhao/draft-js-mentionHashtag-plugin',
  '3dBinPack',
  '3DViewerComponent',
  '4meFirst-github-example',
  '9Wares-js',
  '37FIS',
  'A',
  'ABAValidator',
  'ABCEnd',
  'AbokyBot',
  'Accessor',
  'Accessor_MongoDB',
  'Accessor_MySQL',
  'Accessor_Singleton',
  'Account',
  'accumulateArray',
  'ACCUPLACERClient',
  'AccuplacerClient',
  'Acid',
  'activaDocs',
  'ActiveResource.js',
  'ADBCordovaAnalytics',
  'addTimeout',
  'AdultJS',
  'AesUtil',
  'AgentX',
  'AirBridgePlugin',
  'airLogger',
  'ajiThird',
  'alaGDK',
  'AlarmClock',
  'alarmClock',
  'Alchemyst',
  'AlertLogic',
  'alertsXYZ',
  'ali-topSdk',
  'AliceBot',
  'alinkRNTest',
  'aliOcrIdCard',
  'AllCal.WebApp',
  'alpacaDash',
  'AmateurJS',
  'AMD',
  'AMGCryptLib',
  'AmILate',
  'AmILateAnand',
  'amitTest',
  'AmpCoreApi',
  'amProductsearch',
  'amqpWrapper',
  'amrToMp3',
  'angular-autoFields-bootstrap',
  'angular-dateParser',
  'angular-GAPI',
  'angular-PubSub',
  'Angular-test-child',
  'Angular1',
  'Angular2',
  'angular2-Library',
  'angular2-localStorage',
  'angular2-Menu',
  'angular2-quickstart-ngSemantic',
  'angularApp',
  'angularCubicColorPicker',
  'angularjs-ES6-brunch-seed',
  'angularjsSlider',
  'AngularStompDK',
  'Animated_GIF',
  'animateJs',
  'animateSCSS',
  'AnimationFrame',
  'AnimIt',
  'Anirudhnodeapp',
  'Anjali',
  'annoteJS',
  'ANSIdom',
  'antFB',
  'antFB-init',
  'antFB-mobile',
  'antFB-router-redux-ie8',
  'AntMobileUI',
  'AnToast',
  'Antony',
  'aoIoHw90B5sE1wG9',
  'API-Documentation',
  'APIConnect',
  'APICreatorSDK',
  'APlan',
  'APM-mouse',
  'APM.P2H',
  'apMigStats',
  'AporaPushNotification',
  'App2App',
  'applqpakTest',
  'AppTracker',
  'AQ',
  'ArcusNode',
  'AriesNode',
  'array_handler_liz_Li',
  'Array.prototype.forEachAsync',
  'ArrayBuffer-shim',
  'arrayFuncs',
  'ArrowAulaExpress',
  'Article-collider-packages',
  'Arunkumar-Angular-Trial',
  'asEvented',
  'asJam',
  'ASP.NET',
  'assert',
  'AssetPipeline',
  'assignment2-BW',
  'Assignment6',
  'async_hooks',
  'asyncBuilder',
  'asyncEJS',
  'AsyncHttpRequest-CordovaPlugin',
  'AsyncProxy',
  'AsyncStorage',
  'asyncStorage',
  'atom-C',
  'atom-Fe',
  'atom-Ge',
  'atom-K',
  'atom-Li',
  'atom-Na',
  'atom-Pb',
  'atom-Rb',
  'atom-Si',
  'atom-Sn',
  'AulaExpress',
  'austin-vertebraeTest',
  'authorStats',
  'AutoFixture',
  'autoLoader',
  'AutoReact',
  'AutoTasks',
  'Autowebpcss',
  'Avifors',
  'AVNjs',
  'AwesomeProject',
  'AWSS3Drive',
  'ax-rmdirRecursive',
  'b_Tap',
  'Babel',
  'babel-preset-reactTeam',
  'Bablic_Seo_SDK',
  'BablicLogger',
  'Backbone-Collection-Predefined-Filters',
  'Backbone.Aggregator',
  'backbone.browserStorage',
  'Backbone.Chosen',
  'Backbone.Marionette.Handlebars',
  'Backbone.Mutators',
  'Backbone.Overview',
  'Backbone.Rpc',
  'Backbone.Subset',
  'baDataModel',
  'Bag',
  'BaiduMapManager',
  'BandGravity',
  'bangDM',
  'banking-Josh-demo',
  'BankWebservice',
  'bannerFlip',
  'BaremetricsCalendar',
  'Barfer',
  'BarneyRubble',
  'Base',
  'Base64',
  'baseProject',
  'Basic-Material-framework',
  'BasicCredentials',
  'basicFFmpeg',
  'bbArray',
  'Beegee',
  'begineer_Practice',
  'beijingDate',
  'bem-countMaster',
  'bem-countSlave',
  'bem-getHistory',
  'Bestpack',
  'betterMatch',
  'BetterRegExp',
  'Bhellyer',
  'BHP_MSD',
  'BiDirectionalScrollingTable',
  'BigAssFansAPI',
  'BigInt',
  'BIMserverWrapper',
  'Binary-search-tree',
  'binarySearch',
  'bindAll',
  'BinHeap',
  'biojs-vis-RDFSchema',
  'Biolac',
  'Birbal',
  'BitSetModule',
  'BizzStream',
  'Blackfeather',
  'BlackMirror',
  'Blacksmith',
  'blacktea.jsonTemplates',
  'Blaggie-System',
  'BlankUp',
  'Blink1Control2',
  'blitzLib',
  'Blob',
  'BlobBuilder',
  'BlobBuilder-browser',
  'Blog',
  'BlueOcean',
  'BlueOps',
  'Blueprint-Sugar',
  'bluthLBC',
  'blya!',
  'BMFE_scaffold',
  'Bmodule',
  'Bo-colors-project',
  'Boilerpipe-Scraper',
  'Bondlib',
  'bonTemplate',
  'BootSideMenu',
  'bornCordova',
  'Botcord',
  'Bottr-cli',
  'Brackets',
  'brain***_games***',
  'Brave',
  'BrewCore',
  'BrianPingPong',
  'BrianSuperComponents',
  'BrickPlus',
  'Brocket',
  'Brosec',
  'browserProxy',
  'browserType',
  'brush-Makefile',
  'bTap',
  'BtMacAddress',
  'BubbleJS',
  'Buffer',
  'buffer',
  'BufferList',
  'Bugay',
  'Build',
  'BuildBox',
  'Builder',
  'Builders',
  'BuildWithJavascript',
  'BusinessObjects',
  'Button',
  'Buttons',
  'Bynd',
  'ByteBuffer',
  'C9js',
  'Cache-Service-Collector',
  'Cacher',
  'callbackQueue',
  'CallbackRouter',
  'callBlock-plugin',
  'callBlock.plugin',
  'camcardPlugin',
  'CameraPreview',
  'Canteen',
  'canvas-toBlob',
  'canvasColorPicker',
  'Caoutchouc',
  'Cap',
  'Carbon',
  'cardsJS',
  'Cartogram-Utils',
  'cascadeDrop',
  'Cashew',
  'Cat4D',
  'catchTender',
  'CategoryJS',
  'catl-deploySSH',
  'cbNetwork',
  'CbolaInfra',
  'CBQueue',
  'CBuffer',
  'ccNetViz',
  'ccPagination',
  'ccTpl',
  'censoreMio',
  'Censorify',
  'censorify_Publish20160706',
  'censorify_Vincent_Choe',
  'censorifyAD',
  'censorifyAshes',
  'censorifyGuangyi',
  'censorifyKatKat',
  'censorifyRayL',
  'censorifyTM',
  'CETEIcean',
  'cfUtilityService',
  'CFViews',
  'chadschwComponentTest0001',
  'changelogFDV',
  'Changling-dom',
  'CharLS.js',
  'Chart.Annotation.js',
  'Chart.CallBack.js',
  'Chart.Crosshairs.js',
  'Chart.HorizontalBar.js',
  'Chart.Smith.js',
  'Chart.Zoom.drag.js',
  'Chart.Zoom.js',
  'ChartTime',
  'chatSocketIo',
  'ChattingRoom',
  'checkForModuleDuplicates',
  'cheferizeIt',
  'chenouTestNode',
  'child_process',
  'chowYen',
  'chrome-localIp',
  'ChuckCSS',
  'ChuckNorrisException',
  'chunkArray',
  'cjdsComponents',
  'Class',
  'Classy',
  'clearInterval',
  'ClearSilver',
  'clearTimeout',
  'CLI-todo',
  'CLI-UI',
  'cliappRafa',
  'clientFrontEnd',
  'ClientStorage',
  'clipDouban',
  'ClipJS',
  'CloudMusicCover',
  'CloudStore',
  'Cls',
  'cluster',
  'CM-react-native-document-picker',
  'CM1',
  'coberturaJS',
  'codeStr',
  'Coeus',
  'COFFEENODE',
  'Coflux',
  'colegislate-DynamoDbEventRepository',
  'ColeTownsend',
  'collabProvidesModules',
  'CollectionMap',
  'colWidth.js',
  'com.emsaeng.cordova.plugin.AdMob',
  'com.nickreed.cordova.plugin.brotherPrinter',
  'com.none.alarmClock',
  'com.zwchen.firstPlugin',
  'com.zwchen.qqAdvice',
  'combineJS',
  'CometJS',
  'Comfy',
  'Comments',
  'CommentsJS',
  'comp-Fetch',
  'Company',
  'compareStrings',
  'CompassSM',
  'Complex',
  'componentDoc',
  'componentDoc-cli',
  'CompoundSignal',
  'Compress-CSS',
  'Compression',
  'concatAll',
  'Concur',
  'ConfluencePageAttacher',
  'ConnectTheDotsDesktop',
  'Console',
  'console',
  'constants',
  'constelation-Animate_',
  'constelation-BackgroundImage',
  'constelation-Block',
  'constelation-Button',
  'constelation-Col',
  'constelation-Event_',
  'constelation-Flex',
  'constelation-Inline',
  'constelation-InlineBlock',
  'constelation-InlineCol',
  'constelation-InlineFlex',
  'constelation-InlineRow',
  'constelation-Painter',
  'constelation-Row',
  'constelation-Style_',
  'constelation-Text',
  'constelation-Video',
  'constelation-View',
  'ConstraintNetwork',
  'ContactMe',
  'ContentEdit',
  'ContentSelect',
  'ContentTools',
  'convertPinyin',
  'CoolBeans',
  'Coolhelper',
  'copyMe',
  'cordova-plugin-adPlayCafebazaar',
  'cordova-plugin-adPlayPushe',
  'cordova-plugin-bluetoothClassic-serial',
  'cordova-plugin-coolFunction',
  'cordova-plugin-euroart93-smartConfig',
  'cordova-plugin-ios-android-IAP',
  'cordova-plugin-LineLogin',
  'Cordova-Plugin-OpenTok-JBS',
  'cordova-plugin-permissionScope',
  'cordova-plugin-SchaffrathWebviewer',
  'cordova-plugin-SDKAW',
  'Cordova-Plugin-SystemBarDimmer',
  'cordova-plugin-YtopPlugin',
  'Cordova-react-redux-boilerplate',
  'cordova-StarIO-plugin',
  'CordovaSMS',
  'CordovaWebSocketClientCert',
  'coreApi',
  'CornerCut',
  'CornerJob',
  'CorrespondenceAnalysis',
  'cosBuffer',
  'cosTask',
  'Couch-cleaner',
  'Couchbase-sync-gateway-REST',
  'CouchCover',
  'CouchDBChanges',
  'CouchDBExternal',
  'CountAdd_000001',
  'cPlayer',
  'cqjPack',
  'Crawler',
  'Create-React-App-SCSS-HMR',
  'createClass',
  'createDOC',
  'createNpm',
  'createServer',
  'CRMWebAPI',
  'crockpot-fromBinary',
  'crockpot-fromEnglish',
  'crockpot-fromRoman',
  'crockpot-toEnglish',
  'crockpot-toRoman',
  'Cron',
  'CropSr',
  'crypto',
  'CSDebug',
  'CSDLParser',
  'CSLogger',
  'CSSMatrix',
  'CSSselect',
  'Csster',
  'CSSwhat',
  'CSV-JS',
  'CTP_MARKET_DATA',
  'cttv.bubblesView',
  'cttv.diseaseGraph',
  'cttv.expansionView',
  'cttv.flowerView',
  'cttv.speciesIcons',
  'cttv.targetAssociationsBubbles',
  'cttv.targetAssociationsTree',
  'cttv.targetGeneTree',
  'Cuber',
  'cubicColorPicker',
  'Cui-Dialog',
  'CustomCamera',
  'customComponent',
  'customLibrary',
  'CustomPlugin',
  'CustomWebView',
  'cuteLogger',
  'cwebp-binLocal',
  'CyberJS',
  'D',
  'd-fordeYoutube',
  'D-Stats',
  'D.Va',
  'd3-bboxCollide',
  'd3-pathLayout',
  'd3.geoTile',
  'D3.TimeSlider',
  'Daja',
  'Daniel_NPM_Library_Test',
  'Dante2',
  'DanTroy-utils',
  'Dashboard',
  'Dasher',
  'dashr-widget-Weather',
  'dashr-widget-World-Pool-Championships',
  'Data-CSS',
  'Data-Same-Height',
  'dataAccess',
  'Database-Jones',
  'DataManager',
  'dataStream',
  'dateFormat-kwen',
  'dateFormatW',
  'DateHuatingzi',
  'DateMaskr',
  'dateModule',
  'DatePicker',
  'Datepicker.js',
  'Dateselect',
  'DateValidator',
  'DateZ',
  'Datum',
  'Davis',
  'dd-rc-mStock',
  'DDEvents',
  'deBijenkorf-protractor-tests',
  'Debug-Tracker',
  'Deci-mal',
  'DeCurtis-Logger',
  'deepEqualsWith',
  'deepPick',
  'defaultStr',
  'Deferred',
  'deferredEventEmitter',
  'defineClass',
  'defineJS',
  'DelegateListener',
  'deleteMoudles',
  'Demo',
  'Demo1',
  'demoNeeeew',
  'demoWei',
  'demoYTC',
  'Deneme',
  'derivco-SoundJS',
  'derpModule',
  'DeskSet',
  'Desktop-command',
  'Devbridge-FrontEnd',
  'Developer',
  'deviousknightFirstNpm',
  'devisPattern',
  'devProxy',
  'DFP',
  'dgram',
  'dgURI',
  'diagnostics_channel',
  'Dial',
  'DiggernautAPI',
  'Diogenes',
  'DirScanner',
  'dirStat',
  'DirWatcher',
  'Discord-Webhook',
  'DiscordForge',
  'diveSync',
  'dkastner-JSONPath',
  'DM.NodeJS',
  'dns',
  'Dock-command',
  'docxtemplaterCopy',
  'doLink',
  'DOM',
  'Domai.nr',
  'domain',
  'DOMArray',
  'DOMBuilder',
  'DOMino',
  'DOMtastic',
  'DOMtastic-npm',
  'dotFormat',
  'dotJS',
  'DoubleCheck',
  'Dove.js',
  'downloadAPI',
  'downLoadFile',
  'DownloadManager',
  'DownloadProxy',
  'DPS',
  'DQ',
  'draftjsToHTML',
  'dragOnZone',
  'drakovNew',
  'Draper',
  'DrawPDF',
  'Dribble',
  'Drupal-Node.js',
  'DT',
  'Duckface',
  'Dui',
  'DVA',
  'DvA',
  'dVa',
  'DXIV2Inst',
  'DynamicBuffer',
  'dynamoDB',
  'DynamoDBStream',
  'DynWorker',
  'Easy-Peasy-Slide',
  'easyCache',
  'easyFe',
  'easyRestWithABL',
  'EasyUI',
  'eavesTool',
  'EBI-Icon-fonts',
  'echartsEx',
  'EclipseScroll',
  'ECMASquasher',
  'edfToHtmlConverter',
  'edGoogleApi',
  'edGraham',
  'EfemerideList',
  'efemerideList',
  'efficientLoad',
  'eFishCrawler',
  'EhanAreesha',
  'Elastic-Beanstalk-Sample-App',
  'ElasticSlider-core',
  'electron-isDev',
  'ElectronAppUpdater',
  'ElectronRouter',
  'elementsJS',
  'Elixirx',
  'Elm-0.17-Gulp-Coffeescript-Stylus-Lodash-Browserify-Boilerplate',
  'EmailClient',
  'ember-cli-fullPagejs',
  'ember-leaflet-geoJSON',
  'emoJiS-interpreter',
  'Empite',
  'EmpiteApp',
  'emptyObject',
  'emptyString-loader',
  'Encloud',
  'encodeBase64',
  'encodeID',
  'energyCalculator-browser',
  'EnglishTranslator',
  'ensureDir',
  'Enumjs',
  'Environment.js',
  'ep_disableChat',
  'EPO_OPS_WRAPPER',
  'equalViews-comparative-selection',
  'eRx-build',
  'ES-poc',
  'es6-DOM-closest',
  'eSlider',
  'eslint-plugin-elemMods',
  'EsmalteMx.ProductApi.Lambdas',
  'Estro',
  'ETag',
  'eValue-bs',
  'EVE',
  'EventDispatcher',
  'eventDrops',
  'EventEmitter',
  'EventField',
  'EventFire',
  'EventFire.js',
  'EventHub',
  'EventRelayEmitter',
  'events',
  'EventServer',
  'eventstore.mongoDb',
  'EventtownProject',
  'EventUtil',
  'EVEoj',
  'EverCookie',
  'ewdDOM',
  'ewdGateway',
  'ExBuffer',
  'execSync',
  'exFrame-configuration',
  'exFrame-core',
  'exFrame-generator',
  'exFrame-logger',
  'exFrame-mq',
  'exFrame-rest',
  'exFrame-rpc',
  'exFrame-security',
  'ExifEditor',
  'Exitent',
  'expectThat.jasmine-node',
  'expectThat.mocha',
  'Express',
  'Express-web-app',
  'expressApi',
  'ExpressCart',
  'ExpressCheckout',
  'expressingFounder',
  'ExpressMVC',
  'ExpressNode',
  'expressOne',
  'expressSite',
  'expressWeb',
  'ExtraInfo',
  'extraRedis',
  'Eyas',
  'EzetechT',
  'EZVersion',
  'F',
  'F-chronus',
  'f*',
  'FabioPluginiUno',
  'Facebook_Graph_API',
  'facebookPhotos',
  'FacebookYarn',
  'factor-bundle-WA64',
  'FAEN',
  'Faker',
  'Falcon',
  'fast-artDialog',
  'fastA_node',
  'FastLegS',
  'Fayer',
  'fbRecursiveRequest',
  'FeedbackModuleTest',
  'feedBum',
  'fenix-ui-DataEditor',
  'fenix-ui-DSDEditor',
  'Fermi-UI',
  'FetchCallLog',
  'fieldsValidator',
  'fig-Componts',
  'File',
  'File_Reader_solly',
  'FileBrowser',
  'FileError',
  'fileGlue',
  'FileList',
  'fileLog',
  'FilePicker-Phonegap-iOS-Plugin',
  'FileReader',
  'FileSaver',
  'FileSync',
  'FileWriter',
  'FileWriterSync',
  'Finder-command',
  'FirstApp',
  'FirstCustomPlugin',
  'firstModule',
  'firstNodejsModule',
  'firstYarn',
  'fis-parse-requireAsyncRes',
  'fis-postpackager-inCSSToWebP',
  'fis3SmartyTool',
  'FitText-UMD',
  'Flamingo',
  'flatToTrees',
  'fleschDe',
  'Flex-With-Benefits',
  'FlickrJS',
  'flipPage',
  'Florence',
  'FlowerPassword',
  'flowMap',
  'FLTEST',
  'fnProxy',
  'FontAwesome-webpack',
  'fontEnd',
  'FontLoader',
  'foo!',
  'foo~',
  'forAsync',
  'ForceCode',
  'forceLock',
  'forChangeFilesName',
  'forEachAsync',
  'formAnimation',
  'formatDate',
  'formBuilder',
  'FormData',
  'Formless',
  'formValidate',
  'FrameGenerator',
  'freightCrane',
  'French-stemmer',
  'Frenchpress',
  'FreshDocs',
  'friendsOfTrowel-buttons-component',
  'friendsOfTrowel-dropdowns-component',
  'friendsOfTrowel-Forms-component',
  'friendsOfTrowel-Layouts-component',
  'Friggeri.net',
  'Frog',
  'frontBuild',
  'Frontend-starter',
  'FrontEndCentral-documentation',
  'FrontJSON',
  'FrontPress',
  'Frozor-Logger',
  'Fruma',
  'fs',
  'fs-uTool',
  'FSM',
  'FT232H',
  'fuck!',
  'Fuell',
  'FuellDocTest',
  'FuellSys',
  'FuellTest',
  'FullStack',
  'FunDemo2',
  'FURI',
  'Fury',
  'futSearch',
  'futureDocBuilder',
  'FyreWorks-Node',
  'fzmFE',
  'Gaiam',
  'Ganescha-Bot-Jokes',
  'gaoboHello',
  'Garrett-pokemon',
  'gatesJs',
  'Gauge',
  'gaugeJS',
  'gaussianMixture',
  'gbL-jsMop',
  'GC-Sequence-Viewer',
  'gdBuildLogs',
  'gdBuilds',
  'Gems.PairedDeviceClient',
  'genData',
  'generateIndex',
  'generator-entityV2-widgets',
  'generator-kittJS',
  'generator-qccr-startKit',
  'generator-reactpackSample',
  'generator-zillionAngular',
  'Gengar',
  'GeoMatrix',
  'GeosysDroid',
  'GeosysTest',
  'Gerardo',
  'getDateformat',
  'getExtPath',
  'getSignature',
  'GettyEmbeddy',
  'ghostTools',
  'GhostTube',
  'GiftEditor',
  'GirlJS',
  'GitAzure',
  'gitbook-plugin-prism-ASH',
  'gitbook-plugin-specialText',
  'gitbook-start-heroku-P8-josue-nayra',
  'gitbook-start-heroku-P9-josue-nayra',
  'gitForge',
  'gitHub',
  'GitHub-Network-Graph',
  'GitHubTrending',
  'gitProvider',
  'gl-flyCamera',
  'gl-simpleTextureGenerator',
  'glMath',
  'GLORB',
  'glslCanvas',
  'glslEditor',
  'glslGallery',
  'GLSlideshow',
  'Glue',
  'GMP',
  'golbalModule',
  'Goldfish',
  'Gon',
  'Google_Plus_API',
  'Google_Plus_Server_Library',
  'Google-Chrome-command',
  'GoogleDrive',
  'googleOAuthServer',
  'googlePlaceAutocomplete',
  'GoogleService-NodeJs',
  'Gord',
  'gPagesJS',
  'Gps2zip',
  'GRAD_leaveNotes',
  'GRAD_makeFire',
  'grad-customGear',
  'grad-factions-VR',
  'grad-leaveNotes',
  'grad-makeFire',
  'Grafar',
  'Graph',
  'graphLock.custom.plugin',
  'graphQl-Mysql-Server',
  'GridFS',
  'GridManager',
  'gridminCss',
  'Gridtacular',
  'GroupePSAConnectedCar',
  'Grow.js',
  'Grunt-build',
  'grunt-checkFileSize',
  'grunt-cmd-handlebarsWrap',
  'grunt-ftp-getComponent',
  'grunt-httpTohttps',
  'grunt-latexTOpdf-conversion',
  'grunt-Npm-grunts',
  'grunt-po2mo-multiFiles',
  'grunt-Replacebyrefs',
  'grunt-syncFolder',
  'grunt-urlCacheBuster',
  'guideJs',
  'gulp-addSuffix',
  'gulp-combineHtml',
  'gulp-imgToBase64',
  'gulp-lowerCase',
  'gulp-phpWebserver',
  'gulp-spacingWord',
  'Gulp-Tasks',
  'GumbaJS',
  'Gusto',
  'gz2qiCalcModule',
  'h2oUIKit',
  'H5UI',
  'H666',
  'habibtestPublish',
  'HackBuffer',
  'handleStr',
  'HansontableComponent',
  'Haraka',
  'HariVignesh',
  'harmonyHubCLI',
  'HarryPotterParty',
  'harsh-Test-Module',
  'Harshil',
  'hash!',
  'hashPage',
  'hashTranslate',
  'HASWallpaperManager',
  'hasWord',
  'HeartBeatWoT_pi',
  'Hello',
  'hello_test_spade69XXX',
  'Hello_World',
  'HelloBot',
  'helloBySoo',
  'helloDevelopersnodejs',
  'HelloExpress',
  'helloModule',
  'HelloWorld',
  'helloWorld',
  'HelloWorld_hlhl_040',
  'HelloWorldComponent',
  'HelloWorldNodeJS',
  'helloYJ',
  'helpBy',
  'helpCenter',
  'herokuRun',
  'Hesiir-components',
  'HHello',
  'Hidash',
  'HiddenMarkovModel',
  'hideShowPassword',
  'highcharts-*',
  'HighlightP',
  'Highway',
  'Hinclude',
  'Hipmob',
  'Hiraku',
  'hm_firstPackage',
  'HMTraining',
  'homebridge-anelPowerControl',
  'homebridge-bigAssFans',
  'homebridge-CurrentAmbientLightLevel',
  'homebridge-Homeseer',
  'homebridge-LEDStrip',
  'homebridge-MotionSensor',
  'homebridge-RFbulb',
  'Homematic-Hue-Interface',
  'hoshiCustomContent',
  'hoshiImageLoader',
  'HotJS',
  'Hotshot',
  'hoverifyBootnav',
  'howToNPM',
  'Hppy',
  'Hpy',
  'htmlCutter',
  'htmlKompressor',
  'HTMLString',
  'htmlToTree',
  'http',
  'http2',
  'HTTPRequest',
  'https',
  'httpShell',
  'httpTohttps',
  'Hubik',
  'Hubik-Demo',
  'Hubik-Platform',
  'Hubik-Platform-Chrome',
  'Hubik-Plugin',
  'Hubik-Plugin-Memory',
  'Hubik-Plugin-Network',
  'Hubik-Plugin-Rendering',
  'Hubik-Util',
  'hubot-yigeAi',
  'HuK',
  'hybridCrypto',
  'i18next.mongoDb',
  'Ian_Chu',
  'IArray',
  'Ibis.js',
  'iCompute',
  'iEnhance',
  'IENotification',
  'iFrameAPI',
  'IFY-gulp-kit',
  'II',
  'IIF',
  'iIndexed',
  'iKeyed',
  'iM880-serial-comm',
  'imageCDN-webpack-loader',
  'imageMagick',
  'Imager',
  'Imageresizer',
  'imageTool',
  'ImageViewer',
  'iMagPay',
  'iMemoized',
  'iMessageModule',
  'Imovie',
  'Imp',
  'Incheon',
  'Index',
  'indexedStore',
  'inferModule-jsdoc-plugin',
  'infieldLabel',
  'Influxer',
  'inputcheckMemo',
  'inspector',
  'INSPINIA',
  'Insplash',
  'inStyle',
  'interactiveConsole',
  'Interval',
  'IO',
  'IObject',
  'ionic-gulp-browserify-typescript-postTransform',
  'IonicSocket',
  'iOS-HelloWorld',
  'IOTSDK',
  'iotsol-app-FAN',
  'iotsol-app-test-Node-RED',
  'iotsol-service-string-upperCase',
  'IQVIS',
  'Iris',
  'iRobo-react-modal',
  'iSecured',
  'isElementInViewport',
  'isEqual',
  'iSeries',
  'isFirefoxOrIE',
  'isHolidayInChina',
  'iSocketService',
  'isPureFunction',
  'iStorable',
  'iTransactable',
  'iTunes-command',
  'iValidated',
  'iWeYou',
  'iZettle',
  'iziModal',
  'JabroniJS',
  'jaCodeMap',
  'Jade-Sass-Gulp-Starter',
  'jadeBundler',
  'jadiTest',
  'jAlert',
  'JamSwitch',
  'JASON',
  'JavaScript-101',
  'JazzScript',
  'jcarouselSwipe',
  'jDataView',
  'jDate',
  'jetsExt',
  'Jimmy-Johns',
  'jingwenTest',
  'JMSList',
  'JMSlist.js',
  'Jody',
  'joi-dataURI',
  'joi-string-dataURI',
  'jordenAngular',
  'jordenAngular2',
  'JorupeCore',
  'JorupeInstance',
  'JOSS',
  'JotihuntReact',
  'Journaling-Hash',
  'jpaCreate',
  'jParser',
  'JPath',
  'jPlotter',
  'jPlugins',
  'JQ',
  'jQ-validation-laravel-extras',
  'JQDeferred',
  'jQGA',
  'jqGrid',
  'jqNode',
  'jqPaginator',
  'jqplot.donutRenderer',
  'jqPromise4node',
  'jqTreeGridWithPagination',
  'jQuery',
  'jquery-adaptText',
  'jquery-asAccordion',
  'jquery-asBgPicker',
  'jquery-asBreadcrumbs',
  'jquery-asCheck',
  'jquery-asChoice',
  'jquery-asColor',
  'jquery-asColorPicker',
  'jquery-asDropdown',
  'jquery-asFontEditor',
  'jquery-asGalleryPicker',
  'jquery-asGmap',
  'jquery-asGradient',
  'jquery-asHoverScroll',
  'jquery-asIconPicker',
  'jquery-asImagePicker',
  'jquery-asItemList',
  'jquery-asModal',
  'jquery-asOffset',
  'jquery-asPaginator',
  'jquery-asPieProgress',
  'jquery-asProgress',
  'jquery-asRange',
  'jquery-asScroll',
  'jquery-asScrollable',
  'jquery-asScrollbar',
  'jquery-asSelect',
  'jquery-asSpinner',
  'jquery-asSwitch',
  'jquery-asTooltip',
  'jquery-asTree',
  'jQuery-by-selector',
  'jquery-dynamicNumber',
  'jquery-idleTimeout-plus',
  'jquery-loadingModal',
  'jquery-navToSelect',
  'jQuery-QueryBuilder',
  'jquery-rsLiteGrid',
  'jquery-rsRefPointer',
  'jquery-rsSlideIt',
  'jQuery-Scanner-Detection',
  'jquery-scrollTo',
  'jquery-scrollToTop',
  'jquery-slidePanel',
  'jQuery.component',
  'jquery.customSelect',
  'jquery.dataTables.min.js',
  'jquery.Jcrop.js',
  'jQuery.keyboard',
  'jQuery.mmenu-less',
  'jQuery.print',
  'jquery.rsLiteGrid',
  'jquery.rsOverview',
  'jquery.rsRefPointer',
  'jquery.rsSlideIt',
  'jquery.rsSliderLens',
  'jQuery.toggleModifier',
  'jquery.waitforChild',
  'jqueryPro',
  'js-build-RomainTrouillard',
  'JS-Entities',
  'JS-string-minimization',
  'JS.Responsive',
  'jSaBOT',
  'jsCicada',
  'jsConcat',
  'JSCPP',
  'jsDAV',
  'JSDev',
  'jsdoc-TENSOR',
  'jsDocGenFromJson',
  'jsDump',
  'jSelect',
  'JSErrorMonitor',
  'JSErrorMonitor-server',
  'jsFeed',
  'jsFiddleDownloader',
  'JSFramework',
  'JSLint-commonJS',
  'JSLintCli',
  'JSLogger',
  'JSON',
  'JSON-Splora',
  'JSON.sh',
  'JSON2',
  'json8-isArray',
  'json8-isBoolean',
  'json8-isJSON',
  'json8-isNull',
  'json8-isNumber',
  'json8-isObject',
  'json8-isPrimitive',
  'json8-isString',
  'json8-isStructure',
  'JSON2016',
  'JSONloops',
  'JSONPath',
  'JSONPathCLI',
  'JSONRpc',
  'JSONSelect',
  'JSONStream',
  'JsonUri',
  'JSONUtil',
  'jsonX',
  'JSplay',
  'jspolyfill-array.prototype.findIndex',
  'JSPP',
  'JSpring',
  'jsQueue',
  'jsSourceCodeParser',
  'jStat',
  'JSUS',
  'JSV',
  'JSX',
  'jsz-isType',
  'JTemplate',
  'JTmpl',
  'jTool',
  'JuliaStyles',
  'JumanjiJS',
  'Jupyter-Git-Extension',
  'justifiedGallery',
  'justJenker',
  'JustMy.scss',
  'JWBootstrapSwitchDirective',
  'jWorkflow',
  'jxLoader',
  'JYF_restrict',
  'K_Tasks',
  'K--Ajax',
  'K-Report',
  'KAB.Client',
  'Kahana',
  'Kapsel-project',
  'Katy',
  'Kayzen-GS',
  'KB',
  'KB_Model',
  'kelTool',
  'kelTool2',
  'KenjutsuUI',
  'KevinLobo3377-node',
  'KFui',
  'kickoff-fluidVideo.css',
  'Kid',
  'kingBuilder',
  'kiranApp',
  'Kirk',
  'Kissui',
  'kittJS',
  'Kiwoom-Helper',
  'KLC3377-node',
  'knockout.ajaxTemplateEngine',
  'koa-artTemplate',
  'koa-Router',
  'koaPlus',
  'koaVue',
  'KonggeIm',
  'kpPublicPerson',
  'kpPublicVideo',
  'krawlerWash',
  'ktPlayer',
  'kylpo-BackgroundImage',
  'kylpo-Block',
  'kylpo-Button',
  'kylpo-Col',
  'kylpo-Flex',
  'kylpo-Inline',
  'kylpo-InlineBlock',
  'kylpo-InlineCol',
  'kylpo-InlineFlex',
  'kylpo-InlineRow',
  'kylpo-Paint',
  'kylpo-Painter',
  'kylpo-Row',
  'kylpo-Text',
  'kylpo-View',
  'kzFormDaimyo',
  'L.TileLayer.Kartverket',
  'L7',
  'labBuilder',
  'Lactate',
  'Lade',
  'laravel-jQvalidation',
  'Large',
  'lark-PM',
  'LasStreamReader',
  'latte_web_ladeView',
  'latte_webServer4',
  'lavaK',
  'layaIdecode',
  'Layar',
  'Layout',
  'LazyBoy',
  'lazyBum',
  'lazyConnections',
  'lazyLoadingGrid',
  'lcAudioPlayer',
  'LCM',
  'LDAP',
  'Leaf.js',
  'Leaflet-MovingMaker',
  'Leaflet.AutoLayers',
  'Leaflet.Deflate',
  'Leaflet.GeoJSON.Encoded',
  'Leaflet.GreatCircle',
  'Leaflet.MultiOptionsPolyline',
  'Leaflet.TileLayer.MBTiles',
  'Leaflet.vector-markers',
  'leapShell',
  'LearningNPM',
  'learnnode_by_HHM',
  'leFunc',
  'Legos',
  'Libby-Client',
  'LightCinematic',
  'lihuanxiangNpm1',
  'limitedQueue',
  'linearJs',
  'lineReader',
  'Lingo',
  'LinkedList',
  'linkIt',
  'LISP.js',
  'liteParse',
  'liuchengjunOrder0414',
  'LiveController',
  'LiveDocument',
  'LiveScript',
  'LiveScript-brunch',
  'LiveView',
  'liweiUitl',
  'lizaorenqingTool',
  'lmONE',
  'LMUI',
  'LMX-Data',
  'LNS_weixin_h5',
  'localeMaker_v1',
  'localforage-memoryStorageDriver',
  'LocalRecord',
  'localStorage',
  'localStorage-info',
  'localStorage-mock',
  'LoDashfromScratch',
  'lofterG',
  'Loganalyzer',
  'LogbookMessageCreator',
  'Logger',
  'Logging',
  'Loggy',
  'logic2UI',
  'LogosDistort',
  'LogStorage.js',
  'logStream',
  'LOL',
  'lolAJ',
  'LongestCommonSubstring',
  'loop-setTimeout',
  'loopback-connector-rest-addCookie',
  'lopataJs',
  'Lorem',
  'Losas',
  'LP_test_task',
  'Lucy',
  'LUIS',
  'LUIS_FB',
  'Lumenize',
  'Lush.js',
  'LykkeFramework',
  'M66_math_example',
  'mac-cropSr',
  'MacGyver',
  'Mad.js',
  'magentoExt',
  'Maggi.js',
  'Maggi.js-0.1',
  'MagpieUI',
  'MALjs',
  'Mambo-UI',
  'mangoSlugfy',
  'mapleTree',
  'mappumBot',
  'Marionette-Require-Boilerplate',
  'markupDiff',
  'marryB',
  'MasterDetailApplication',
  'MaterialAngularWithNodeJS',
  'Math',
  'math_example_20160505163300BR',
  'math_example_Hala',
  'math_example_myown_ve-01119310520_V2',
  'math_exampleCJG',
  'math_exampleII',
  'math_exampleX',
  'math_ThisIsMe',
  'math-Murasame',
  'Math1105',
  'mathAdd',
  'mathExample',
  'MathJax-node',
  'MathJS',
  'mathMagic',
  'MathTest1',
  'MatPack',
  'Mavigator',
  'MAX-AVT-homebridge-led',
  'MAXAVTDemo',
  'MAXIMjs',
  'MaxUPS',
  'MCom',
  'MD5',
  'MDLCOMPONENT',
  'mdlReact',
  'mdPickers',
  'mdRangeSlider',
  'mdToPdf',
  'MEAN',
  'MeanApp1',
  'MeCab',
  'mediaCheck',
  'Mediany',
  'medicalHistory',
  'Mercury',
  'Meridix-WebAPI-JS',
  'Mers',
  'MessageBus',
  'MetaEditor',
  'Meteor-Test-Installer',
  'MetroTenerife',
  'MFL-ng',
  'MFRC522-node',
  'mglib-GAMS.WEBCLIENT2',
  'MIA',
  'MicroServices',
  'Midgard',
  'midhunthomas_Test',
  'mihoo_fileUpload',
  'mini-fileSystem-WebServer',
  'Mini-test',
  'MiniAppOne',
  'MiniAppTwo',
  'minibuyCommonality',
  'miniJsonp',
  'MiniManager',
  'MiniMVC',
  'MinionCI',
  'Minju003',
  'Mirador',
  'Misho_math_example',
  'MJackpots',
  'mjb44-playground-module-exporting-interface-and-type-method-B',
  'mjb44-playground-module-exporting-interface-and-type-method-C',
  'Mkoa',
  'Mkoa-pg-session',
  'MKOUpload',
  'mlm603Test',
  'mmAnimate',
  'mmDux',
  'MMM-alexa',
  'mmRequest',
  'mmRouter',
  'mNotes',
  'Mockery',
  'modalDemo',
  'modalDemo1',
  'modalWin.js',
  'module',
  'ModuleBinder',
  'modulebyAKB',
  'ModuleC',
  'moduleLoader',
  'moduleTest',
  'MoEventEmitter',
  'Mokr',
  'Mole',
  'mon-appNon0',
  'MonApp',
  'MongoDAL',
  'mongoose-schema-to-graphQL',
  'mongooseSchema-to-graphQL',
  'Monik',
  'MonikCommon',
  'MoniqueWeb',
  'Monorail.js',
  'Mopidy-Spotmop',
  'mosesCheckIn',
  'MovieJS',
  'mOxie',
  'MoxtraPlugin_1.1',
  'MoxtraPlugin_1.2.1',
  'mPortalUI',
  'MQTTClient',
  'Mr.Array',
  'Mr.Async',
  'Mr.Coverage',
  'mraaStub',
  'MrsYu',
  'MrsYu1',
  'msGetStarted',
  'mSite',
  'msJackson',
  'mSnackbar',
  'Mu',
  'Muffin',
  'MultiSlider',
  'musuAppsas',
  'MWS_Automation',
  'my-awesome-nodejs-moduleHL',
  'my-componentAnimesh',
  'My-First-Module',
  'My-first-Package',
  'My-Fist-Project',
  'my-HLabib',
  'My1ink',
  'MyAngularGruntt',
  'MyAnimalModule',
  'myappSriniAppala',
  'myappUSBankExample',
  'myAries',
  'MyBlog',
  'myCalclator',
  'myDate',
  'myDialog',
  'myDu2',
  'myDVA',
  'myFirst-Nodejs-Module',
  'MyFirstContribution',
  'myfirstDemo',
  'myFirstModule',
  'myFirstNodeModule',
  'myFirstNpm',
  'myFirstPluginAji',
  'myFirstProject',
  'myFirstPub',
  'myLib',
  'myMath',
  'MYMODAL',
  'MyModule',
  'myModule',
  'myNodeJs',
  'myNodeJsApp',
  'myNodejsApp',
  'myNpm',
  'MYnpm1',
  'myNpm0001',
  'myNpm2',
  'myNpm5',
  'myNpm10',
  'myNpm11',
  'myNpm111',
  'myNpm999',
  'myNpmfei',
  'myNpmfei1',
  'myNpml',
  'myNpmModule',
  'myNpmrz1',
  'MyPlugin',
  'MyProject',
  'MyProjNode',
  'myPromise',
  'myrikGoodModule',
  'Mysql-Assistant',
  'mysupermoduleXXX',
  'myTest',
  'Mytest_module',
  'mytPieChart',
  'N',
  'N3-components',
  'NA1',
  'NageshTestapplication',
  'NAME',
  'Nameless13',
  'NaNNaNBatman.js',
  'nanoTest',
  'NasimBotPlatform',
  'NativeAds',
  'NativeCall',
  'NativeProject',
  'nativescript-CallLog',
  'nativescript-GMImagePicker',
  'nativescript-logEntries',
  'NavExercise',
  'nCinoRabbit',
  'ncURL',
  'NDDB',
  'neouiReact-button',
  'Neptune',
  'NERDERY.JS.NAT',
  'nestedSortable',
  'net',
  'NeteaseCloudMusicApi',
  'neteaseMusicApi',
  'Netflow',
  'Netlifer',
  'NetMatch',
  'NetOS',
  'netOS',
  'Netpath-Test',
  'Neuro',
  'Neuro-Company',
  'NewModule1',
  'newmsPong',
  'newPackage',
  'newPioneer',
  'newStart',
  'newtouchCloud',
  'NewWebview',
  'NexManager',
  'NexmoJS',
  'NFO-Generator',
  'ng2-clockTST',
  'ng2-dodo-materialTypeTransfer',
  'ng2-QppWs',
  'ng2GifPreview',
  'NG2TableView',
  'ngBrowserNotification',
  'ngCart',
  'ngChatScroller',
  'ngComponentRouter-patched',
  'ngCurrentGeolocation',
  'ngDfp',
  'ngDrag',
  'ngFileReader',
  'ngGen',
  'ngGeolocation',
  'ngHyperVideo',
  'ngIceberg',
  'ngImgHandler',
  'ngIntercom',
  'ngKit',
  'ngPicker',
  'ngPluralizeFilter',
  'ngPluralizeFilter2',
  'ngProgress-browserify',
  'ngScroll',
  'ngSinaEmoji',
  'ngSmoothScroll',
  'ngSqlite',
  'ngTile',
  'ngTimeInput',
  'ngTreeView',
  'ngUpload',
  'ngUpload-forked',
  'Nguyen_test',
  'ngVue',
  'ngYamlConfig',
  'nHttpInterceptor',
  'Nick_calc',
  'NickSam_CGD',
  'NightPro-Web',
  'nightwatchGui',
  'Nikmo',
  'nImage',
  'Nitish',
  'nitish.kumar.IDS-LOGIC',
  'NlpTextArea',
  'nltco-lgpt-clean-A',
  'nltco-lgpt-clean-B',
  'nltco-lgpt-dedupe-simple-A',
  'nltco-lgpt-dedupe-simple-B',
  'nMingle',
  'nmPhone',
  'nMysql',
  'NoCR',
  'NODE',
  'Node_POC',
  'node-CORSproxy',
  'Node-FacebookMessenger',
  'Node-HelloWorld-Demo',
  'node-iDR',
  'node-iOS',
  'Node-JavaScript-Preprocessor',
  'node-localStorage',
  'Node-Log',
  'Node-Module-Test',
  'node-myPow',
  'node-red-contrib-samsungTV',
  'node-red-contrib-wwsNodes',
  'node-red-StefanoTest',
  'node-TBD',
  'NodeApp',
  'nodeApp',
  'nodeAuth',
  'nodeBase',
  'NodeBonocarmiol',
  'nodeCalcPax',
  'nodeCombo',
  'nodeDemo9.26',
  'nodeDocs',
  'nodeEventedCommand',
  'NodeFileBrowser',
  'NodeFQL',
  'nodeHCC',
  'nodeInterface',
  'NodeInterval',
  'nodeIRCbot',
  'nodeJS',
  'NodeJS_Tutorial',
  'nodeJs-zip',
  'NodejsAgent',
  'NodeJsApplication',
  'nodejsFramework',
  'nodejsLessons',
  'NodeJsNote',
  'NodeJsPractice',
  'nodeJsPrograms',
  'Nodejsricardo',
  'NodeJSTraining-demo-9823742',
  'nodejsTutorial',
  'NodejsWebApp1',
  'nodejsWorkSpace',
  'NodeKeynote',
  'nodeLearning',
  'nodeMarvin',
  'nodeMarvin2',
  'NodeMini',
  'nodeMysqlWrapper',
  'nodeNES',
  'nodeos-boot-multiUser',
  'nodeos-boot-singleUser',
  'nodeos-boot-singleUserMount',
  'nodepackageBoopathi',
  'nodePhpSessions',
  'NodePlugwise',
  'NodePlugwiseAPI',
  'nodeQuery',
  'nodes_Samples',
  'NodeSDK-Base',
  'NodeServerExtJS',
  'NodeSSH',
  'nodeSSO',
  'NodeSTEP',
  'nodeTest',
  'NodeTestDee',
  'nodeTTT',
  'nodeTut',
  'NoDevent',
  'NodeView',
  'nodeWebsite',
  'NodObjC',
  'Nonsense',
  'NoobConfig',
  'NoobHTTP',
  'normalizeName',
  'NORRIS',
  'nOSCSender',
  'Note.js',
  'NotificationPushsafer',
  'Notifly',
  'Npm',
  'npm-Demo',
  'Npm-Doc-Study',
  'npm-mydemo-pkgTest',
  'npm-setArray',
  'npm-wwmTest',
  'npmCalc',
  'npmFile',
  'npmModel',
  'npmModel1',
  'npmModel2',
  'npmTest',
  'npmToying',
  'npmTutorial',
  'NPR_Test',
  'nrRenamer',
  'nStoreSession',
  'nTPL',
  'nTunes',
  'NudeJS',
  'nunjucks-includeData',
  'O',
  'O_o',
  'o_O',
  'O2-countdown',
  'O2-tap',
  'objectFitPolyfill',
  'ObjectSnapshot',
  'ObjJ-Node',
  'ObservableQueue',
  'OCA-api',
  'ocamlAlpha',
  'ocamlBetterErrors',
  'OcamlBytes',
  'ocamlBytes',
  'ocamlRe',
  'OhMyCache',
  'OK-GOOGLE',
  'Olive',
  'onBoarding',
  'OnCollect',
  'OneDollar.js',
  'oneTest',
  'OpenBazaar-cli',
  'OpenDolphin',
  'OpenJPEG.js',
  'openWeather',
  'OperatorUI',
  'OPFCORS',
  'OPFSalesforce',
  'OptionParser',
  'OrangeTree',
  'Orchestrator',
  'Order',
  'ORIENTALASIAN',
  'os',
  'Osifo-package',
  'osu-ModPropertiesCalculator',
  'OTPAutoVerification',
  'overloadedFunction',
  'OwnMicroService',
  'OwnNormalizer',
  'OwnPubSub',
  'OwnPubSubClient',
  'OwnPubSubServer',
  'p2Pixi',
  'PaasyMcPaasFace',
  'pacemakerJS',
  'packAdmin',
  'Package',
  'packageNodeCR-Jeff.json',
  'packagePublished',
  'packageTesting',
  'Packery-rows',
  'packing-template-artTemplate',
  'Paddinator',
  'Paginate',
  'palindromeCalcPax',
  'palindromePax',
  'PanPG',
  'Panzer',
  'parameterBag',
  'paramsValidator',
  'Parse-Server-phone-number-auth',
  'parseArgs',
  'Parser',
  'parseUri',
  'Particle',
  'Particleground.js',
  'PassiveRedis',
  'path',
  'PatternLabStarter',
  'patternReplacer',
  'paytmGratify',
  'PayzenJS',
  'pDebug',
  'pdf-to-dataURL',
  'pdfTOthumbnail_convert',
  'PeA_nut',
  'Peek',
  'PeepJS',
  'Pega.IO',
  'Peggy.js',
  'Percolator',
  'perf_hooks',
  'performJs',
  'pgnToJSON',
  'PHibernate',
  'phoeNix-cli',
  'phoenixCLI',
  'PhonegapAnalytics',
  'PhonegapBeacon',
  'PhonegapFeeds',
  'PhonegapGeofence',
  'PhonegapGrowth',
  'PhonegapLocations',
  'PhonegapPush',
  'picardForTynt',
  'PicoMachine',
  'Pictionary',
  'Pintu',
  'pjEmojiTest',
  'PJsonCouch',
  'PK',
  'PL8',
  'placeHolder.js',
  'PLATO',
  'PlayStream',
  'pluginCreater',
  'pluginHelloWorld',
  'pluginHelloworld',
  'pluginTest',
  'PlugMan',
  'pluuuuHeader',
  'PoistueJS',
  'Pokeball-Scanner',
  'PokeChat',
  'PokedexJS',
  'PokemonGoBot',
  'PokemonGoNodeDashboard',
  'polar-cookieParser',
  'pollUntil',
  'Polymer',
  'POM',
  'pomeloGlobalChannel',
  'pomeloScale',
  'portal-fe-devServer',
  'PostgresClient',
  'Postlog',
  'PowerPlanDisplay',
  'powerPlug',
  'PP',
  'ppublishDemo',
  'Pre',
  'Preprocessor',
  'PrettyCSS',
  'prettyJson',
  'PrimaryJS',
  'primerNodo',
  'primo-explore-LinkedData',
  'primo-explore-prmFacetsToLeft',
  'primo-explore-prmFullViewAfter',
  'primo-explore-prmLogoAfter',
  'primo-explore-prmSearchBarAfter',
  'PrimoEsempio',
  'Printer',
  'Prism',
  'prjTemplate',
  'Probes.js',
  'process',
  'proInterface',
  'Project-A-VK',
  'Prometheus',
  'Promise',
  'Promise.js',
  'PromiseContext',
  'promisify-syncStore',
  'PropagAPISpecification',
  'propCheckers',
  'Propeller',
  'properJSONify',
  'Proto',
  'proton-quark-rabbitMQ',
  'ProtVista',
  'ProUI-Utils',
  'ProvaSimone',
  'provinceCity.js',
  'PSNjs',
  'PTC-Creator',
  'ptyzhuTest_20160813',
  'PublishDemo',
  'publishDigitalCrafts2016',
  'PubSub',
  'pubsubJS',
  'pulsarDivya',
  'punycode',
  'PupaFM',
  'Puppet.svg',
  'PureBox',
  'PureBox-Gallery-PlayEngine',
  'purePlayer',
  'PushMessage',
  'PushPanel',
  'PushPlugin_V2',
  'pybee!batavia',
  'Q',
  'q-mod-cliElements',
  'q-mod-cliPrinter',
  'QAP-cli',
  'QAP-SDK',
  'Qarticles',
  'QnA_Fore',
  'QNtest',
  'qqMap',
  'qTip2',
  'QuadMap',
  'QuantumExperimentService',
  'querystring',
  'R',
  'R.js',
  'R2',
  'RAD.js',
  'Radical',
  'raehoweNode',
  'Rajas',
  'random-fullName',
  'randomCaddress',
  'randomCname',
  'randomCname.js',
  'randomLib',
  'randomNickname',
  'RandomSelection',
  'randomTestOne',
  'randString',
  'randString.js',
  'Range.js',
  'Rannalhi',
  'rAppid.js',
  'rAppid.js-server',
  'rAppid.js-sprd',
  'Rapydscriptify',
  'RaspiKids',
  'raZerdummy',
  'RCTMessageUI',
  'React_Components',
  'React-Carousel',
  'react-countTo',
  'react-creditCard',
  'React-ES5-To-ES6-Checklist',
  'react-input-dateTime',
  'react-InputText-component',
  'react-komposer-watchQuery',
  'react-materialUI-components',
  'react-native-accountKit',
  'react-native-cascadeGrid',
  'react-native-checkBox',
  'react-native-DebugServerHost',
  'React-Native-Form-Field',
  'react-native-isDeviceRooted',
  'react-native-LoopAnimation',
  'react-native-MultiSlider',
  'react-native-portableView',
  'react-native-swRefresh',
  'react-PPT',
  'React-Redux-Docker-Ngnix-Seed',
  'react-refresh-infinite-tableView',
  'React-Select-Country',
  'React-Tabs',
  'React-UI-Notification',
  'react-uploadFile',
  'reactClass',
  'reactcordovaApp',
  'ReactEslint',
  'reactFormComponentTest1',
  'reactGallery',
  'reactHeaderComponentTest1',
  'ReactHero',
  'reactIntlJson-loader',
  'ReactNaitveImagePreviewer',
  'ReactNative-checkbox',
  'reactNative-checkbox',
  'reactNativeDatepicker',
  'reactNativeLoading',
  'ReactNativeNavbar',
  'ReactNativeSlideyTabs',
  'ReactNativeSocialLogin',
  'ReactNativeStarterKit',
  'ReactNativeToastAndroid',
  'reactTwo',
  'ReactUploader',
  'readabilitySAX',
  'ReadableFeeds',
  'readline',
  'ReadSettings',
  'Reality3D',
  'reallySimpleWeather',
  'ReApp',
  'ReasonDB',
  'RecastAI-Library-JavaScript',
  'recordType',
  'recordWebsite',
  'RedisCacheEngine',
  'redisHelper',
  'reDIx',
  'RefreshMedia',
  'registerSendMsg',
  'reloadOnUpdate',
  'remoteFileToS3',
  'RemoteTestService',
  'removeNPMAbsolutePaths',
  'RentalAdvantage',
  'repl',
  'Replace',
  'Replace2.0',
  'Replen-FrontEnd',
  'replNetServer',
  'Require',
  'requireAsync',
  'Resin',
  'resolveDependencies',
  'responseHostInfo',
  'ReST-API',
  'RESTful-API',
  'Restifytest',
  'Restlastic',
  'RESTLoader',
  'Reston',
  'RestTest',
  'RetreveNumbers',
  'rgbToHexa',
  'RhinoStyle',
  'Richard',
  'richardUtils',
  'rinuts-nodeunitDriver',
  'Risks-Tables',
  'RNBaiduMap',
  'RNCommon',
  'RNSVG',
  'RNSwiftHealthkit',
  'rNums',
  'RobinGitHub',
  'Robusta',
  'RockSelect',
  'Router',
  'RP_Limpezas_Industriais',
  'Rpm',
  'RSK-Router',
  'RT-react-toolbox',
  'Rubytool',
  'runQuery',
  'runStormTest',
  'runTestScenario',
  'RunwayLogger',
  'RWD-Table-Patterns',
  'RWPromise',
  'Safari-command',
  'SafeObject.js',
  'Safood-Parse',
  'SaFood-Parse',
  'sahibindenServer',
  'salgueirimTeste',
  'samepleMicroservice',
  'samjs-mongo-isOwner',
  'Sample',
  'SamplePlugIn',
  'SandboxTools',
  'sandcastle_multiApp',
  'Sanitizer.js',
  'sanitizer.unescapeEntities',
  'Sardines',
  'Sass-Boost',
  'Sass-JSON',
  'Sass-layout',
  'Saturday',
  'SauceBreak',
  'sayHelloByone',
  'sbg-queueManager',
  'sbUtils',
  'SC-Expense-Plugin',
  'Scaffolding',
  'scalejs.metadataFactory',
  'ScgiClient',
  'Scheduler.js',
  'schema-inspector-anyOf',
  'scp-cleanRedis',
  'Scrap',
  'scriptTools',
  'scrollAnimation',
  'scrollPointerEvents',
  'ScrollShow',
  'Sdp-App',
  'seaModel',
  'searchBox.js',
  'SecChat',
  'SecureKeyStore',
  'segnoJS',
  'Seguranca',
  'SegurancaBrasilcard',
  'Select2',
  'selfAsync',
  'selfAutocomplete',
  'SelfieJS',
  'SenseJs',
  'SenseOrm',
  'Sentimental',
  'SeptemTool',
  'seqFlow',
  'SerialDownloader',
  'serveItQuick',
  'Server',
  'Service-Discovery-DLNA-SSDP',
  'serviceDiscovery',
  'SessionWebSocket',
  'Set',
  'setInterval',
  'setRafTimeout',
  'setTimeout',
  'SexyJS',
  'sfaClient',
  'sgBase',
  'sgCore',
  'sgFramework',
  'sgLayers',
  'sgSay',
  'Sharder',
  'ShareSDK',
  'SharingCMS',
  'Shave',
  'Sheet',
  'SHI-Shire',
  'sHistory',
  'ShowNativeContact',
  'SHPS4Node-auth',
  'SHPS4Node-cache',
  'SHPS4Node-commandline',
  'SHPS4Node-Config',
  'SHPS4Node-config',
  'SHPS4Node-cookie',
  'SHPS4Node-CSS',
  'SHPS4Node-dependency',
  'SHPS4Node-error',
  'SHPS4Node-file',
  'SHPS4Node-frontend',
  'SHPS4Node-init',
  'SHPS4Node-language',
  'SHPS4Node-log',
  'SHPS4Node-make',
  'SHPS4Node-optimize',
  'SHPS4Node-parallel',
  'SHPS4Node-plugin',
  'SHPS4Node-sandbox',
  'SHPS4Node-schedule',
  'SHPS4Node-session',
  'SHPS4Node-SQL',
  'shwang1aPackage1',
  'shy-Do',
  'shy-static-imgJoin',
  'SignaturePrinter',
  'Silvera',
  'simoneDays',
  'Simple',
  'Simple-Cache',
  'simple-hello-world-apiClientsideTest',
  'simple-jQuery-slider',
  'simpleArgsParser',
  'simpleCsvToJson',
  'SimpleHtdigest',
  'SimpleQueue',
  'SimpleRPC',
  'Simplog',
  'SingularityUI',
  'sip.js-mnQf2Q2R',
  'Sisense-node-schedule',
  'SITA-JS-Wrapper',
  'siteBuild',
  'Skadi',
  'SkelEktron',
  'SKRCensorText',
  'SkyLabels.js',
  'Skype-command',
  'slgComponents',
  'Slidebars',
  'Slidebars-legacy',
  'slidePage',
  'Slither-Server',
  'sLog',
  'slush-initPro',
  'Smaller4You',
  'Smart-Web-Proxy',
  'SmartConfig',
  'SmartyGrid',
  'SMValidator',
  'smyNpm1',
  'Snake.js',
  'SnipIt',
  'SnsShare',
  'SocialDig.js',
  'Socialight',
  'socketGW',
  'SocketIPC',
  'sortBy.js',
  'Soumen',
  'SoundCloud_Node_API',
  'SpaceMagic',
  'SpeechJS',
  'Speedco',
  'Speedonetzer',
  'Sphero-Node-SDK',
  'Spores',
  'Spot',
  'spotifyCurrentlyPlaying.js',
  'SpotlightJS',
  'Spring',
  'SPUtility.js',
  'SQLClient',
  'SQProject',
  'SquareOfNumber',
  'Squirrel',
  'squishMenu',
  'Sslac',
  'SSO',
  'SSSDemoNPM7oct',
  'SSuperSchool',
  'StaceFlow',
  'StanLee-WPTheme-Generator',
  'star-initReact',
  'Starr',
  'startInt',
  'starW-names',
  'StaticServer',
  'staticServer',
  'staticSync',
  'StatusBar',
  'StdJSBuilder',
  'steamAPI',
  'STEPNode',
  'Stewed',
  'stickUp',
  'stickyNavbar.js',
  'stickyStack',
  'StimShopPlugin',
  'storeJSON',
  'storkSQL',
  'stormClient',
  'Str.js',
  'Stratagem',
  'stream',
  'string_decoder',
  'String_module',
  'string-DLL',
  'string.prototype.htmlDecode',
  'string.prototype.htmlEntityDecode',
  'StringDistanceTS',
  'StringMultiplier',
  'StringScanner',
  'STRUCT',
  'Suckle',
  'sudokuMaker',
  'sudoTracker',
  'SUI-Angular2-Modal',
  'superClipBoard',
  'SuperDank',
  'superJoy',
  'Supermodule',
  'supermoduleBugay',
  'supermoduleLyu',
  'supermoduleNik',
  'supermoduleShulumba',
  'Supersonic',
  'superUsingMod',
  'svgSprite',
  'swimCoachStopwatch',
  'SwitchBoard',
  'synchro_ByJoker',
  'SyncRun',
  'Syndication',
  'Synergy',
  'sys',
  'Sysdate',
  'sytemMonitor-client',
  'szxPack',
  'T_T',
  'T-Box',
  'table-Q',
  'tableComponent',
  'Tachyon',
  'TagCloud',
  'tagOf',
  'TagSelect.js',
  'TalkerNode',
  'TALQS',
  'talquingApp',
  'TangramDocs',
  'tap-linux-2BA',
  'tap-win-2BA',
  'tap-win-C94',
  'Targis',
  'Tattletale',
  'Tayr',
  'tbCLI',
  'TDTwitterStream',
  'Tea',
  'TeamBuilder',
  'TechNode',
  'TechnoLib',
  'TeeChart',
  'Templ8',
  'Template',
  'Tempus',
  'Ter',
  'Tereshkovmodule',
  'Terminal-command',
  'test_helloWorld',
  'Test-7',
  'test-A',
  'test-naamat-Al-Aswad',
  'Test-Project',
  'TestAmILate',
  'testApi',
  'testApp',
  'Testchai2',
  'Testchai21',
  'testContrast',
  'TESTdelete123',
  'testDEMOABCD',
  'testDirJackAtherton',
  'Teste2',
  'testeRealTime',
  'testForThis',
  'testMe',
  'testModule',
  'testModule-hui',
  'testNode',
  'TestNodeJsApplication',
  'testPackage',
  'testPackage2',
  'TestPlugin',
  'testPlugin',
  'TestProject',
  'testProject',
  'testPublish',
  'testPublisha',
  'testPublishNpmModule',
  'TFWhatIs',
  'Thairon-node',
  'Thanatos_pack',
  'ThanhNV',
  'Theater',
  'TheGiver',
  'Thimble',
  'Thing.js',
  'thingHolder',
  'think-paymentService',
  'think-qiniuService',
  'think-quotationService',
  'think-wechatService',
  'ThinkHub',
  'ThinkInsteon',
  'ThirtyDaysOfReactNative',
  'threadHandler',
  'threejs-htmlRenderer',
  'ThrustFS',
  'ThumborJS',
  'TigraphBot',
  'tilejsonHttpShim',
  'Time-Tracker-Cli',
  'Timelined',
  'Timeliner.Core',
  'Timeliner.Index',
  'Timepass',
  'timers',
  'timeTraveller',
  'timeUtils',
  'tiNanta',
  'TinyAnimate',
  'tinyChat',
  'tinyEmiter',
  'tinyFrame',
  'tinyImages',
  'tinyLoger',
  'Titan',
  'TJAngular',
  'tls',
  'tm-apps-poolApi',
  'tmSensor',
  'toBin',
  'toDataURL',
  'toDoList',
  'toDots',
  'Toji',
  'tokenAndAuthorizationManager',
  'tokenAndAuthorizationManger',
  'Tom',
  'tomloprodModal',
  'Tool-bluej-gulp',
  'Toolshed-Client',
  'topSdk',
  'TopuNet-AMD-modules',
  'TopuNet-BaiduMap',
  'TopuNet-CalendarScroller',
  'TopuNet-dropDownLoad',
  'TopuNet-GrayScale',
  'TopuNet-ImageCropCompressorH5',
  'TopuNet-JRoll',
  'TopuNet-js-functions',
  'TopuNet-JsHint4Sublime',
  'TopuNet-JsHintify',
  'TopuNet-Landscape_mask',
  'TopuNet-Landscape-Mask',
  'TopuNet-LayerShow',
  'TopuNet-mobile-stop-moved',
  'TopuNet-node-functions',
  'TopuNet-Pic-code',
  'TopuNet-PromptLayer-JS',
  'TopuNet-QueueLazyLoad',
  'TopuNet-RequireJS',
  'TopuNet-RotatingBanner',
  'TopuNet-WaterFall',
  'TopuNet-weixin-node',
  'TorrentBeam',
  'TorrentCollection',
  'toSrc',
  'toString',
  'touchController',
  'toYaml',
  'TPA',
  'tr-O64',
  'trace_events',
  'TradeJS',
  'Trains',
  'TrainsController',
  'TrainsModel',
  'TramiteDocumentarioFront',
  'TransactionRelay',
  'transformConfigJson',
  'transitionEnd',
  'translateFzn',
  'Travis',
  'TrixCSS',
  'truncateFilename',
  'tslint-jasmine-noSkipOrFocus',
  'TSN',
  'ttm-Testing',
  'tty',
  'Tuio.js',
  'Turntable',
  'tuTrabajo-client',
  'TweenTime',
  'TwigJS',
  'twitterApiWrapper',
  'txtObj',
  'Tyche',
  'TypeCast',
  'typedCj.js',
  'TypedFunc',
  'typescript-demo-MATC-Andrew',
  'typography-theme-Wikipedia',
  'typopro-web-TypoPRO-AmaticSC',
  'typopro-web-TypoPRO-AnonymousPro',
  'typopro-web-TypoPRO-Asap',
  'typopro-web-TypoPRO-Astloch',
  'typopro-web-TypoPRO-BebasNeue',
  'typopro-web-TypoPRO-Bitter',
  'typopro-web-TypoPRO-Chawp',
  'typopro-web-TypoPRO-ComingSoon',
  'typopro-web-TypoPRO-Cousine',
  'typopro-web-TypoPRO-Coustard',
  'typopro-web-TypoPRO-CraftyGirls',
  'typopro-web-TypoPRO-Cuprum',
  'typopro-web-TypoPRO-Damion',
  'typopro-web-TypoPRO-DancingScript',
  'typopro-web-TypoPRO-Delius',
  'typopro-web-TypoPRO-Gidole',
  'typopro-web-TypoPRO-GiveYouGlory',
  'typopro-web-TypoPRO-GrandHotel',
  'typopro-web-TypoPRO-GreatVibes',
  'typopro-web-TypoPRO-Handlee',
  'typopro-web-TypoPRO-HHSamuel',
  'typopro-web-TypoPRO-Inconsolata',
  'typopro-web-TypoPRO-IndieFlower',
  'typopro-web-TypoPRO-Junction',
  'typopro-web-TypoPRO-Kalam',
  'typopro-web-TypoPRO-KingthingsPetrock',
  'typopro-web-TypoPRO-Kreon',
  'typopro-web-TypoPRO-LeagueGothic',
  'typopro-web-TypoPRO-Lekton',
  'typopro-web-TypoPRO-LibreBaskerville',
  'typopro-web-TypoPRO-Milonga',
  'typopro-web-TypoPRO-Montserrat',
  'typopro-web-TypoPRO-Nickainley',
  'typopro-web-TypoPRO-Oxygen',
  'typopro-web-TypoPRO-Pacifico',
  'typopro-web-TypoPRO-PatuaOne',
  'typopro-web-TypoPRO-Poetsen',
  'typopro-web-TypoPRO-Pompiere',
  'typopro-web-TypoPRO-PTMono',
  'typopro-web-TypoPRO-Rosario',
  'typopro-web-TypoPRO-SansitaOne',
  'typopro-web-TypoPRO-Satisfy',
  'typopro-web-TypoPRO-Signika',
  'typopro-web-TypoPRO-Slabo',
  'typopro-web-TypoPRO-TopSecret',
  'typopro-web-TypoPRO-Unifraktur',
  'typopro-web-TypoPRO-Vegur',
  'typopro-web-TypoPRO-VeteranTypewriter',
  'typopro-web-TypoPRO-WeblySleek',
  'typopro-web-TypoPRO-Yellowtail',
  'Ubertesters',
  'Ubi',
  'UbibotSensor',
  'UbidotsMoscaServer',
  'UbiName',
  'uDom',
  'ueberDB',
  'ueberDB-couch',
  'ueberRemoteStorage',
  'ugcFore',
  'UIjson',
  'UkGeoTool',
  'UltraServerIO',
  'UM007',
  'uMech',
  'uMicro',
  'uMicro-invoke',
  'UMiracleButton',
  'uncaughtException',
  'Underscore-1',
  'UnderscoreKit',
  'UnderscoreMatchersForJasmine',
  'underscorePlus',
  'underscoreWithTypings',
  'Uniform',
  'Unit-Bezier',
  'unity-kjXmol-1',
  'UniversalRoute',
  'Up2Bucket',
  'UParams',
  'UploadCore',
  'Uploader',
  'URIjs',
  'url',
  'URLON',
  'urlParser',
  'urlWatch',
  'USAJOBS',
  'USAJOBS_Help_Center',
  'UserID',
  'userModule1123455',
  'util',
  'utilityFileSystem',
  'utilityTool',
  'Utils',
  'uTool',
  'uTool2',
  'uvCharts',
  'v8',
  'Validate',
  'Validator',
  'VardeminChat',
  'vc-buttonGroup',
  'vcPagination',
  'vdGlslCanvas',
  'VDU-web',
  'Vector',
  'Velvet',
  'vericredClient',
  'VerifyInput.js',
  'Videobox-MODX',
  'videoBoxer',
  'VideoStream',
  'Vidzy',
  'ViewAbility',
  'ViewPort',
  'ViewTest',
  'vintageJS',
  'Virsical',
  'VK-Promise',
  'VLC-command',
  'vm',
  'VmosoApiClient',
  'vmSFTP',
  'VoiceIt',
  'voiceLive',
  'Votesy',
  'VoxFeed',
  'Voyager-search',
  'vPromise',
  'vQ',
  'vQMgArq1o4U1',
  'vsGoogleAutocomplete',
  'vue-dS',
  'vue-scrollTo',
  'vueLoadingBar',
  'VueProject',
  'VueProjectES5',
  'VueTree',
  'Vuk',
  'W2G2',
  'w5cValidator',
  'w11k-dropdownToggle',
  'Wamble',
  'wamTool',
  'Wanderer',
  'wangeditorForReact',
  'wantu-nodejsSDK',
  'wasabiD',
  'wasabiH',
  'wasi',
  'WasteOfTime',
  'WatchWorker',
  'watsonWebSocketSTTwrapper',
  'wb-Wisteria',
  'wBitmask',
  'wColor',
  'wColor256',
  'wConsequence',
  'wCopyable',
  'WCordova',
  'wDeployer',
  'Web_GUI_Core',
  'web3.onChange',
  'Web4.0',
  'webarrancoStarter',
  'WebConsoleUI',
  'Webcord',
  'webdriverNode',
  'webext-getBytesInUse-polyfill',
  'WebHook',
  'WebODF',
  'webpack-dev-server-getApp',
  'webpack-dynamicHash',
  'webpack-Minimount-starter',
  'WebParrot',
  'webpay-webserviceAPI',
  'webStart',
  'WebStencil',
  'webStorage',
  'wechat-enterprise-for-kfService',
  'wEventHandler',
  'wFiles',
  'wGluCal',
  'WhereThingsHappened',
  'WhiteRabbit',
  'WigGLe',
  'Wilson_U',
  'Wilson_Util',
  'WiredPanels',
  'wkhtmltopdfWrapper',
  'wLogger',
  'Wmhao',
  'WNdb',
  'WoD-Dice',
  'WolfyEventEmitter',
  'woodwoodnine_FirstTest',
  'wordCounting',
  'WordDuelConstants',
  'wPath',
  'wProto',
  'wqProj-cli',
  'wRegexpObject',
  'WSBroker',
  'wscn-tilesetQuote-component',
  'wsxRest',
  'wTemplate',
  'wTesting',
  'WTGeo',
  'wTools',
  'wy-checkBrowser',
  'X-date',
  'X-editable',
  'xBEM',
  'xlsTjson',
  'xlsxParser',
  'xmlToJsonTs',
  'Xnpmtools',
  'xSpinner',
  'xStore',
  'xui-vue-WorkflowArrow',
  'Xunfei',
  'xuNpm',
  'XWindow',
  'xwjApp',
  'xxxDemo',
  'yaDeferred',
  'YAEventEmitter',
  'yaMap',
  'yamQuery-excel',
  'yamQuery-excelAnalizer',
  'YamYam',
  'yang-testingNPM',
  'YaoXiaoMi',
  'Yeezy-Case',
  'Yggdrasil',
  'YJS',
  'YmpleCommerce',
  'YouAreDaChef',
  'YouSlackBot',
  'yrdLmz',
  'yuanMath',
  'YuicompressorValidator',
  'Yummy',
  'Yummy-Yummy',
  'YunUI',
  'Yworkcli',
  'Yworkshell',
  'z-lib-structure-dqIndex',
  'zhb_helloTest',
  'Zhengzx',
  'zigZag',
  'Ziz',
  'ZJJPackage',
  'zkModules',
  'zlib',
  'zmqConnector',
  'ZooKeeper',
  'zzcBridge',
  'zzcCopy',
  'zzcDownloadApp'
]

let hasRequiredPurlType
function requirePurlType() {
  if (hasRequiredPurlType) {
    return purlType.exports
  }
  hasRequiredPurlType = 1
  ;(function (module) {
    const { encodeComponent } = /*@__PURE__*/ requireEncode()
    const { PurlError } = /*@__PURE__*/ requireError()
    const { createHelpersNamespaceObject } = /*@__PURE__*/ requireHelpers()
    const { isNullishOrEmptyString } = /*@__PURE__*/ requireLang()
    const {
      isSemverString,
      lowerName,
      lowerNamespace,
      lowerVersion,
      replaceDashesWithUnderscores,
      replaceUnderscoresWithDashes
    } = /*@__PURE__*/ requireStrings()
    const { validateEmptyByType, validateRequiredByType } =
      /*@__PURE__*/ requireValidate()
    const PurlTypNormalizer = purl => purl
    const PurlTypeValidator = (_purl, _throws) => true
    const getNpmBuiltinNames = (() => {
      let builtinNames
      return () => {
        if (builtinNames === undefined) {
          builtinNames =
            // Avoid a require('module') call directly so folks can bundle
            // for the browser without issues.
            (module !== null && module.constructor?.builtinModules) ||
            require$$6
        }
        return builtinNames
      }
    })()
    const getNpmLegacyNames = (() => {
      let legacyNames
      return () => {
        if (legacyNames === undefined) {
          legacyNames = require$$7
        }
        return legacyNames
      }
    })()
    function getNpmId(purl) {
      const { name, namespace } = purl
      return `${namespace?.length > 0 ? `${namespace}/` : ''}${name}`
    }
    const isNpmBuiltinName = id =>
      getNpmBuiltinNames().includes(id.toLowerCase())
    const isNpmLegacyName = id => getNpmLegacyNames().includes(id)
    module.exports = {
      // PURL types:
      // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst
      PurlType: createHelpersNamespaceObject(
        {
          normalize: {
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#alpm
            alpm(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#apk
            apk(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#bitbucket
            bitbucket(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#bitnami
            bitnami(purl) {
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#composer
            composer(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#deb
            deb(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#other-candidate-types-to-define
            gitlab(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#github
            github(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#golang
            // golang(purl) {
            //     // Ignore case-insensitive rule because go.mod are case-sensitive.
            //     // Pending spec change: https://github.com/package-url/purl-spec/pull/196
            //     lowerNamespace(purl)
            //     lowerName(purl)
            //     return purl
            // },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#hex
            hex(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#huggingface
            huggingface(purl) {
              lowerVersion(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#mlflow
            mlflow(purl) {
              if (purl.qualifiers?.repository_url?.includes('databricks')) {
                lowerName(purl)
              }
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#npm
            npm(purl) {
              lowerNamespace(purl)
              // Ignore lowercasing legacy names because they could be mixed case.
              // https://github.com/npm/validate-npm-package-name/tree/v6.0.0?tab=readme-ov-file#legacy-names
              if (!isNpmLegacyName(getNpmId(purl))) {
                lowerName(purl)
              }
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#luarocks
            luarocks(purl) {
              lowerVersion(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#oci
            oci(purl) {
              lowerName(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#pub
            pub(purl) {
              lowerName(purl)
              purl.name = replaceDashesWithUnderscores(purl.name)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#pypi
            pypi(purl) {
              lowerNamespace(purl)
              lowerName(purl)
              purl.name = replaceUnderscoresWithDashes(purl.name)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#qpkg
            qpkg(purl) {
              lowerNamespace(purl)
              return purl
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#rpm
            rpm(purl) {
              lowerNamespace(purl)
              return purl
            }
          },
          validate: {
            // TODO: cocoapods name validation
            // TODO: cpan namespace validation
            // TODO: swid qualifier validation
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#conan
            conan(purl, throws) {
              if (isNullishOrEmptyString(purl.namespace)) {
                if (purl.qualifiers?.channel) {
                  if (throws) {
                    throw new PurlError(
                      'conan requires a "namespace" component when a "channel" qualifier is present'
                    )
                  }
                  return false
                }
              } else if (isNullishOrEmptyString(purl.qualifiers)) {
                if (throws) {
                  throw new PurlError(
                    'conan requires a "qualifiers" component when a namespace is present'
                  )
                }
                return false
              }
              return true
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#cran
            cran(purl, throws) {
              return validateRequiredByType(
                'cran',
                'version',
                purl.version,
                throws
              )
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#golang
            golang(purl, throws) {
              // Still being lenient here since the standard changes aren't official.
              // Pending spec change: https://github.com/package-url/purl-spec/pull/196
              const { version } = purl
              const length = typeof version === 'string' ? version.length : 0
              // If the version starts with a "v" then ensure its a valid semver version.
              // This, by semver semantics, also supports pseudo-version number.
              // https://go.dev/doc/modules/version-numbers#pseudo-version-number
              if (
                length &&
                version.charCodeAt(0) === 118 /*'v'*/ &&
                !isSemverString(version.slice(1))
              ) {
                if (throws) {
                  throw new PurlError(
                    'golang "version" component starting with a "v" must be followed by a valid semver version'
                  )
                }
                return false
              }
              return true
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#maven
            maven(purl, throws) {
              return validateRequiredByType(
                'maven',
                'namespace',
                purl.namespace,
                throws
              )
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#mlflow
            mlflow(purl, throws) {
              return validateEmptyByType(
                'mlflow',
                'namespace',
                purl.namespace,
                throws
              )
            },
            // Validation based on
            // https://github.com/npm/validate-npm-package-name/tree/v6.0.0
            // ISC License
            // Copyright (c) 2015, npm, Inc
            npm(purl, throws) {
              const { name, namespace } = purl
              const hasNs = namespace?.length > 0
              const id = getNpmId(purl)
              const code0 = id.charCodeAt(0)
              const compName = hasNs ? 'namespace' : 'name'
              if (code0 === 46 /*'.'*/) {
                if (throws) {
                  throw new PurlError(
                    `npm "${compName}" component cannot start with a period`
                  )
                }
                return false
              }
              if (code0 === 95 /*'_'*/) {
                if (throws) {
                  throw new PurlError(
                    `npm "${compName}" component cannot start with an underscore`
                  )
                }
                return false
              }
              if (name.trim() !== name) {
                if (throws) {
                  throw new PurlError(
                    'npm "name" component cannot contain leading or trailing spaces'
                  )
                }
                return false
              }
              if (encodeComponent(name) !== name) {
                if (throws) {
                  throw new PurlError(
                    `npm "name" component can only contain URL-friendly characters`
                  )
                }
                return false
              }
              if (hasNs) {
                if (namespace.trim() !== namespace) {
                  if (throws) {
                    throw new PurlError(
                      'npm "namespace" component cannot contain leading or trailing spaces'
                    )
                  }
                  return false
                }
                if (code0 !== 64 /*'@'*/) {
                  throw new PurlError(
                    `npm "namespace" component must start with an "@" character`
                  )
                }
                const namespaceWithoutAtSign = namespace.slice(1)
                if (
                  encodeComponent(namespaceWithoutAtSign) !==
                  namespaceWithoutAtSign
                ) {
                  if (throws) {
                    throw new PurlError(
                      `npm "namespace" component can only contain URL-friendly characters`
                    )
                  }
                  return false
                }
              }
              const loweredId = id.toLowerCase()
              if (loweredId === 'node_modules' || loweredId === 'favicon.ico') {
                if (throws) {
                  throw new PurlError(
                    `npm "${compName}" component of "${loweredId}" is not allowed`
                  )
                }
                return false
              }
              // The remaining checks are only for modern names.
              // https://github.com/npm/validate-npm-package-name/tree/v6.0.0?tab=readme-ov-file#naming-rules
              if (!isNpmLegacyName(id)) {
                if (id.length > 214) {
                  if (throws) {
                    throw new PurlError(
                      `npm "namespace" and "name" components can not collectively be more than 214 characters`
                    )
                  }
                  return false
                }
                if (loweredId !== id) {
                  if (throws) {
                    throw new PurlError(
                      `npm "name" component can not contain capital letters`
                    )
                  }
                  return false
                }
                if (/[~'!()*]/.test(name)) {
                  if (throws) {
                    throw new PurlError(
                      `npm "name" component can not contain special characters ("~'!()*")`
                    )
                  }
                  return false
                }
                if (isNpmBuiltinName(id)) {
                  if (throws) {
                    throw new PurlError(
                      'npm "name" component can not be a core module name'
                    )
                  }
                  return false
                }
              }
              return true
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#oci
            oci(purl, throws) {
              return validateEmptyByType(
                'oci',
                'namespace',
                purl.namespace,
                throws
              )
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#pub
            pub(purl, throws) {
              const { name } = purl
              for (let i = 0, { length } = name; i < length; i += 1) {
                const code = name.charCodeAt(i)
                // biome-ignore format: newlines
                if (!(code >= 48 && code <= 57 ||
              // 0-9
              code >= 97 && code <= 122 ||
              // a-z
              code === 95
              // _
              )) {
                if (throws) {
                  throw new PurlError('pub "name" component may only contain [a-z0-9_] characters');
                }
                return false;
              }
              }
              return true
            },
            // https://github.com/package-url/purl-spec/blob/master/PURL-TYPES.rst#swift
            swift(purl, throws) {
              return (
                validateRequiredByType(
                  'swift',
                  'namespace',
                  purl.namespace,
                  throws
                ) &&
                validateRequiredByType('swift', 'version', purl.version, throws)
              )
            }
          }
        },
        {
          normalize: PurlTypNormalizer,
          validate: PurlTypeValidator
        }
      )
    }
  })(purlType)
  return purlType.exports
}

/*!
Copyright (c) the purl authors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
let packageUrl
let hasRequiredPackageUrl
function requirePackageUrl() {
  if (hasRequiredPackageUrl) {
    return packageUrl
  }
  hasRequiredPackageUrl = 1
  const { decodePurlComponent } = /*@__PURE__*/ requireDecode()
  const { PurlError } = /*@__PURE__*/ requireError()
  const { isObject, recursiveFreeze } = /*@__PURE__*/ requireObjects()
  const { PurlComponent } = /*@__PURE__*/ requirePurlComponent()
  const { PurlQualifierNames } = /*@__PURE__*/ requirePurlQualifierNames()
  const { PurlType } = /*@__PURE__*/ requirePurlType()
  const { isBlank, isNonEmptyString, trimLeadingSlashes } =
    /*@__PURE__*/ requireStrings()
  class PackageURL {
    static Component = recursiveFreeze(PurlComponent)
    static KnownQualifierNames = recursiveFreeze(PurlQualifierNames)
    static Type = recursiveFreeze(PurlType)
    constructor(
      rawType,
      rawNamespace,
      rawName,
      rawVersion,
      rawQualifiers,
      rawSubpath
    ) {
      const type = isNonEmptyString(rawType)
        ? PurlComponent.type.normalize(rawType)
        : rawType
      PurlComponent.type.validate(type, true)
      const namespace = isNonEmptyString(rawNamespace)
        ? PurlComponent.namespace.normalize(rawNamespace)
        : rawNamespace
      PurlComponent.namespace.validate(namespace, true)
      const name = isNonEmptyString(rawName)
        ? PurlComponent.name.normalize(rawName)
        : rawName
      PurlComponent.name.validate(name, true)
      const version = isNonEmptyString(rawVersion)
        ? PurlComponent.version.normalize(rawVersion)
        : rawVersion
      PurlComponent.version.validate(version, true)
      const qualifiers =
        typeof rawQualifiers === 'string' || isObject(rawQualifiers)
          ? PurlComponent.qualifiers.normalize(rawQualifiers)
          : rawQualifiers
      PurlComponent.qualifiers.validate(qualifiers, true)
      const subpath = isNonEmptyString(rawSubpath)
        ? PurlComponent.subpath.normalize(rawSubpath)
        : rawSubpath
      PurlComponent.subpath.validate(subpath, true)
      this.type = type
      this.name = name
      this.namespace = namespace ?? undefined
      this.version = version ?? undefined
      this.qualifiers = qualifiers ?? undefined
      this.subpath = subpath ?? undefined
      const typeHelpers = PurlType[type]
      if (typeHelpers) {
        typeHelpers.normalize(this)
        typeHelpers.validate(this, true)
      }
    }
    toString() {
      const { name, namespace, qualifiers, subpath, type, version } = this
      let purlStr = `pkg:${PurlComponent.type.encode(type)}/`
      if (namespace) {
        purlStr = `${purlStr}${PurlComponent.namespace.encode(namespace)}/`
      }
      purlStr = `${purlStr}${PurlComponent.name.encode(name)}`
      if (version) {
        purlStr = `${purlStr}@${PurlComponent.version.encode(version)}`
      }
      if (qualifiers) {
        purlStr = `${purlStr}?${PurlComponent.qualifiers.encode(qualifiers)}`
      }
      if (subpath) {
        purlStr = `${purlStr}#${PurlComponent.subpath.encode(subpath)}`
      }
      return purlStr
    }
    static fromString(purlStr) {
      return new PackageURL(...PackageURL.parseString(purlStr))
    }
    static parseString(purlStr) {
      // https://github.com/package-url/purl-spec/blob/master/PURL-SPECIFICATION.rst#how-to-parse-a-purl-string-in-its-components
      if (typeof purlStr !== 'string') {
        throw new Error('A purl string argument is required.')
      }
      if (isBlank(purlStr)) {
        return [
          undefined,
          undefined,
          undefined,
          undefined,
          undefined,
          undefined
        ]
      }

      // Split the remainder once from left on ':'.
      const colonIndex = purlStr.indexOf(':')
      // Use WHATWG URL to split up the purl string.
      //   - Split the purl string once from right on '#'
      //   - Split the remainder once from right on '?'
      //   - Split the remainder once from left on ':'
      let url
      let maybeUrlWithAuth
      if (colonIndex !== -1) {
        try {
          // Since a purl never contains a URL Authority, its scheme
          // must not be suffixed with double slash as in 'pkg://'
          // and should use instead 'pkg:'. Purl parsers must accept
          // URLs such as 'pkg://' and must ignore the '//'
          const beforeColon = purlStr.slice(0, colonIndex)
          const afterColon = purlStr.slice(colonIndex + 1)
          const trimmedAfterColon = trimLeadingSlashes(afterColon)
          url = new URL(`${beforeColon}:${trimmedAfterColon}`)
          maybeUrlWithAuth =
            afterColon.length === trimmedAfterColon.length
              ? url
              : new URL(purlStr)
        } catch (e) {
          throw new PurlError('failed to parse as URL', {
            cause: e
          })
        }
      }
      // The scheme is a constant with the value "pkg".
      if (url?.protocol !== 'pkg:') {
        throw new PurlError('missing required "pkg" scheme component')
      }
      // A purl must NOT contain a URL Authority i.e. there is no support for
      // username, password, host and port components.
      if (
        maybeUrlWithAuth.username !== '' ||
        maybeUrlWithAuth.password !== ''
      ) {
        throw new PurlError('cannot contain a "user:pass@host:port"')
      }
      const { pathname } = url
      const firstSlashIndex = pathname.indexOf('/')
      const rawType = decodePurlComponent(
        'type',
        firstSlashIndex === -1 ? pathname : pathname.slice(0, firstSlashIndex)
      )
      if (firstSlashIndex < 1) {
        return [rawType, undefined, undefined, undefined, undefined, undefined]
      }
      let rawVersion
      let atSignIndex =
        rawType === 'npm'
          ? // Deviate from the specification to handle a special npm purl type case for
            // pnpm ids such as 'pkg:npm/next@14.2.10(react-dom@18.3.1(react@18.3.1))(react@18.3.1)'.
            pathname.indexOf('@', firstSlashIndex + 2)
          : pathname.lastIndexOf('@')
      // When a forward slash ('/') is directly preceding an '@' symbol,
      // then the '@' symbol is NOT considered a version separator.
      if (
        atSignIndex !== -1 &&
        pathname.charCodeAt(atSignIndex - 1) === 47 /*'/'*/
      ) {
        atSignIndex = -1
      }
      const beforeVersion = pathname.slice(
        rawType.length + 1,
        atSignIndex === -1 ? pathname.length : atSignIndex
      )
      if (atSignIndex !== -1) {
        // Split the remainder once from right on '@'.
        rawVersion = decodePurlComponent(
          'version',
          pathname.slice(atSignIndex + 1)
        )
      }
      let rawNamespace
      let rawName
      const lastSlashIndex = beforeVersion.lastIndexOf('/')
      if (lastSlashIndex === -1) {
        // Split the remainder once from right on '/'.
        rawName = decodePurlComponent('name', beforeVersion)
      } else {
        // Split the remainder once from right on '/'.
        rawName = decodePurlComponent(
          'name',
          beforeVersion.slice(lastSlashIndex + 1)
        )
        // Split the remainder on '/'.
        rawNamespace = decodePurlComponent(
          'namespace',
          beforeVersion.slice(0, lastSlashIndex)
        )
      }
      let rawQualifiers
      if (url.searchParams.size !== 0) {
        const search = url.search.slice(1)
        const searchParams = new URLSearchParams()
        const entries = search.split('&')
        for (let i = 0, { length } = entries; i < length; i += 1) {
          const pairs = entries[i].split('=')
          const value = decodePurlComponent('qualifiers', pairs.at(1) ?? '')
          // Use URLSearchParams#append to preserve plus signs.
          // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams#preserving_plus_signs
          searchParams.append(pairs[0], value)
        }
        // Split the remainder once from right on '?'.
        rawQualifiers = searchParams
      }
      let rawSubpath
      const { hash } = url
      if (hash.length !== 0) {
        // Split the purl string once from right on '#'.
        rawSubpath = decodePurlComponent('subpath', hash.slice(1))
      }
      return [
        rawType,
        rawNamespace,
        rawName,
        rawVersion,
        rawQualifiers,
        rawSubpath
      ]
    }
  }
  for (const staticProp of ['Component', 'KnownQualifierNames', 'Type']) {
    Reflect.defineProperty(PackageURL, staticProp, {
      ...Reflect.getOwnPropertyDescriptor(PackageURL, staticProp),
      writable: false
    })
  }
  Reflect.setPrototypeOf(PackageURL.prototype, null)
  packageUrl = {
    PackageURL,
    PurlComponent,
    PurlQualifierNames,
    PurlType
  }
  return packageUrl
}

/*!
Copyright (c) the purl authors

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
*/
let packageurlJs
let hasRequiredPackageurlJs
function requirePackageurlJs() {
  if (hasRequiredPackageurlJs) {
    return packageurlJs
  }
  hasRequiredPackageurlJs = 1
  const { PackageURL, PurlComponent, PurlQualifierNames, PurlType } =
    /*@__PURE__*/ requirePackageUrl()
  packageurlJs = {
    PackageURL,
    PurlComponent,
    PurlQualifierNames,
    PurlType
  }
  return packageurlJs
}

const packageurlJsExports = /*@__PURE__*/ requirePackageurlJs()

module.exports = packageurlJsExports
